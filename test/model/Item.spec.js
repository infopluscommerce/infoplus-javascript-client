/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.Item();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Item', function() {
    it('should create an instance of Item', function() {
      // uncomment below and update the code to test Item
      //var instane = new infoplus.Item();
      //expect(instance).to.be.a(infoplus.Item);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property accountCodeId (base name: "accountCodeId")', function() {
      // uncomment below and update the code to test the property accountCodeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property lowStockContactId (base name: "lowStockContactId")', function() {
      // uncomment below and update the code to test the property lowStockContactId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property legacyLowLevelContactId (base name: "legacyLowLevelContactId")', function() {
      // uncomment below and update the code to test the property legacyLowLevelContactId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property lowStockCodeId (base name: "lowStockCodeId")', function() {
      // uncomment below and update the code to test the property lowStockCodeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property majorGroupId (base name: "majorGroupId")', function() {
      // uncomment below and update the code to test the property majorGroupId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property subGroupId (base name: "subGroupId")', function() {
      // uncomment below and update the code to test the property subGroupId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property productCodeId (base name: "productCodeId")', function() {
      // uncomment below and update the code to test the property productCodeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property summaryCodeId (base name: "summaryCodeId")', function() {
      // uncomment below and update the code to test the property summaryCodeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property buyerId (base name: "buyerId")', function() {
      // uncomment below and update the code to test the property buyerId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property vendorSKU (base name: "vendorSKU")', function() {
      // uncomment below and update the code to test the property vendorSKU
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property upc (base name: "upc")', function() {
      // uncomment below and update the code to test the property upc
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property itemDescription (base name: "itemDescription")', function() {
      // uncomment below and update the code to test the property itemDescription
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property packingSlipDescription (base name: "packingSlipDescription")', function() {
      // uncomment below and update the code to test the property packingSlipDescription
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property absoluteMax (base name: "absoluteMax")', function() {
      // uncomment below and update the code to test the property absoluteMax
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property additionalDescription (base name: "additionalDescription")', function() {
      // uncomment below and update the code to test the property additionalDescription
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property backorder (base name: "backorder")', function() {
      // uncomment below and update the code to test the property backorder
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property chargeCode (base name: "chargeCode")', function() {
      // uncomment below and update the code to test the property chargeCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property commodityCodeId (base name: "commodityCodeId")', function() {
      // uncomment below and update the code to test the property commodityCodeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property companionCode (base name: "companionCode")', function() {
      // uncomment below and update the code to test the property companionCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property criticalAmount (base name: "criticalAmount")', function() {
      // uncomment below and update the code to test the property criticalAmount
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property overallFixedReorderPoint (base name: "overallFixedReorderPoint")', function() {
      // uncomment below and update the code to test the property overallFixedReorderPoint
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property overallLeadTime (base name: "overallLeadTime")', function() {
      // uncomment below and update the code to test the property overallLeadTime
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property sellPrice (base name: "sellPrice")', function() {
      // uncomment below and update the code to test the property sellPrice
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property pricingPer (base name: "pricingPer")', function() {
      // uncomment below and update the code to test the property pricingPer
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property lotControlFlag (base name: "lotControlFlag")', function() {
      // uncomment below and update the code to test the property lotControlFlag
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property maxCycle (base name: "maxCycle")', function() {
      // uncomment below and update the code to test the property maxCycle
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property maxInterim (base name: "maxInterim")', function() {
      // uncomment below and update the code to test the property maxInterim
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property numericSortOrder (base name: "numericSortOrder")', function() {
      // uncomment below and update the code to test the property numericSortOrder
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property outsideVendorId (base name: "outsideVendorId")', function() {
      // uncomment below and update the code to test the property outsideVendorId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property pickCode (base name: "pickCode")', function() {
      // uncomment below and update the code to test the property pickCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property podOrderSuffix (base name: "podOrderSuffix")', function() {
      // uncomment below and update the code to test the property podOrderSuffix
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property podRevDate (base name: "podRevDate")', function() {
      // uncomment below and update the code to test the property podRevDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property seasonalItem (base name: "seasonalItem")', function() {
      // uncomment below and update the code to test the property seasonalItem
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property requiresProductionLot (base name: "requiresProductionLot")', function() {
      // uncomment below and update the code to test the property requiresProductionLot
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property sector (base name: "sector")', function() {
      // uncomment below and update the code to test the property sector
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property secure (base name: "secure")', function() {
      // uncomment below and update the code to test the property secure
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property serialCode (base name: "serialCode")', function() {
      // uncomment below and update the code to test the property serialCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unitCode (base name: "unitCode")', function() {
      // uncomment below and update the code to test the property unitCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unitsPerWrap (base name: "unitsPerWrap")', function() {
      // uncomment below and update the code to test the property unitsPerWrap
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property weightPerWrap (base name: "weightPerWrap")', function() {
      // uncomment below and update the code to test the property weightPerWrap
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property quantityPerInnerPack (base name: "quantityPerInnerPack")', function() {
      // uncomment below and update the code to test the property quantityPerInnerPack
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property quantityPerCase (base name: "quantityPerCase")', function() {
      // uncomment below and update the code to test the property quantityPerCase
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property quantityPerPallet (base name: "quantityPerPallet")', function() {
      // uncomment below and update the code to test the property quantityPerPallet
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property innerPackBarcode (base name: "innerPackBarcode")', function() {
      // uncomment below and update the code to test the property innerPackBarcode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property caseBarcode (base name: "caseBarcode")', function() {
      // uncomment below and update the code to test the property caseBarcode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property palletBarcode (base name: "palletBarcode")', function() {
      // uncomment below and update the code to test the property palletBarcode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property voidDate (base name: "voidDate")', function() {
      // uncomment below and update the code to test the property voidDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property wrapCode (base name: "wrapCode")', function() {
      // uncomment below and update the code to test the property wrapCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicText1 (base name: "extrinsicText1")', function() {
      // uncomment below and update the code to test the property extrinsicText1
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicText2 (base name: "extrinsicText2")', function() {
      // uncomment below and update the code to test the property extrinsicText2
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicText3 (base name: "extrinsicText3")', function() {
      // uncomment below and update the code to test the property extrinsicText3
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicNumber1 (base name: "extrinsicNumber1")', function() {
      // uncomment below and update the code to test the property extrinsicNumber1
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicNumber2 (base name: "extrinsicNumber2")', function() {
      // uncomment below and update the code to test the property extrinsicNumber2
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicDecimal1 (base name: "extrinsicDecimal1")', function() {
      // uncomment below and update the code to test the property extrinsicDecimal1
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property extrinsicDecimal2 (base name: "extrinsicDecimal2")', function() {
      // uncomment below and update the code to test the property extrinsicDecimal2
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property casebreakEnabled (base name: "casebreakEnabled")', function() {
      // uncomment below and update the code to test the property casebreakEnabled
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property vendorId (base name: "vendorId")', function() {
      // uncomment below and update the code to test the property vendorId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property vendorPrice (base name: "vendorPrice")', function() {
      // uncomment below and update the code to test the property vendorPrice
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property vendorPer (base name: "vendorPer")', function() {
      // uncomment below and update the code to test the property vendorPer
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property primaryImage (base name: "primaryImage")', function() {
      // uncomment below and update the code to test the property primaryImage
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property pickImage (base name: "pickImage")', function() {
      // uncomment below and update the code to test the property pickImage
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property behaviorType (base name: "behaviorType")', function() {
      // uncomment below and update the code to test the property behaviorType
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property assemblyInstructions (base name: "assemblyInstructions")', function() {
      // uncomment below and update the code to test the property assemblyInstructions
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property forwardLotMixingRule (base name: "forwardLotMixingRule")', function() {
      // uncomment below and update the code to test the property forwardLotMixingRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property storageLotMixingRule (base name: "storageLotMixingRule")', function() {
      // uncomment below and update the code to test the property storageLotMixingRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property forwardItemMixingRule (base name: "forwardItemMixingRule")', function() {
      // uncomment below and update the code to test the property forwardItemMixingRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property storageItemMixingRule (base name: "storageItemMixingRule")', function() {
      // uncomment below and update the code to test the property storageItemMixingRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property allocationRule (base name: "allocationRule")', function() {
      // uncomment below and update the code to test the property allocationRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property allocationSort (base name: "allocationSort")', function() {
      // uncomment below and update the code to test the property allocationSort
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property allocationField (base name: "allocationField")', function() {
      // uncomment below and update the code to test the property allocationField
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property barcodeField (base name: "barcodeField")', function() {
      // uncomment below and update the code to test the property barcodeField
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouseDisplayField (base name: "warehouseDisplayField")', function() {
      // uncomment below and update the code to test the property warehouseDisplayField
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property productIdTagSchemeId (base name: "productIdTagSchemeId")', function() {
      // uncomment below and update the code to test the property productIdTagSchemeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property itemSerialSchemeId (base name: "itemSerialSchemeId")', function() {
      // uncomment below and update the code to test the property itemSerialSchemeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property receivingCriteriaSchemeId (base name: "receivingCriteriaSchemeId")', function() {
      // uncomment below and update the code to test the property receivingCriteriaSchemeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property asnRule (base name: "asnRule")', function() {
      // uncomment below and update the code to test the property asnRule
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property quantityType (base name: "quantityType")', function() {
      // uncomment below and update the code to test the property quantityType
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property hazmat (base name: "hazmat")', function() {
      // uncomment below and update the code to test the property hazmat
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property uspsHazmatTypeId (base name: "uspsHazmatTypeId")', function() {
      // uncomment below and update the code to test the property uspsHazmatTypeId
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property isAlcohol (base name: "isAlcohol")', function() {
      // uncomment below and update the code to test the property isAlcohol
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholType (base name: "alcoholType")', function() {
      // uncomment below and update the code to test the property alcoholType
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholContent (base name: "alcoholContent")', function() {
      // uncomment below and update the code to test the property alcoholContent
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholContainer (base name: "alcoholContainer")', function() {
      // uncomment below and update the code to test the property alcoholContainer
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholVintageYear (base name: "alcoholVintageYear")', function() {
      // uncomment below and update the code to test the property alcoholVintageYear
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholCountry (base name: "alcoholCountry")', function() {
      // uncomment below and update the code to test the property alcoholCountry
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholState (base name: "alcoholState")', function() {
      // uncomment below and update the code to test the property alcoholState
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholRegion (base name: "alcoholRegion")', function() {
      // uncomment below and update the code to test the property alcoholRegion
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholBrand (base name: "alcoholBrand")', function() {
      // uncomment below and update the code to test the property alcoholBrand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholUPCCode (base name: "alcoholUPCCode")', function() {
      // uncomment below and update the code to test the property alcoholUPCCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholNAMBCACode (base name: "alcoholNAMBCACode")', function() {
      // uncomment below and update the code to test the property alcoholNAMBCACode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholUNIMERCCode (base name: "alcoholUNIMERCCode")', function() {
      // uncomment below and update the code to test the property alcoholUNIMERCCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property alcoholSCCCode (base name: "alcoholSCCCode")', function() {
      // uncomment below and update the code to test the property alcoholSCCCode
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property topUp (base name: "topUp")', function() {
      // uncomment below and update the code to test the property topUp
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property shipSolo (base name: "shipSolo")', function() {
      // uncomment below and update the code to test the property shipSolo
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property inventoryUpdateTimestamp (base name: "inventoryUpdateTimestamp")', function() {
      // uncomment below and update the code to test the property inventoryUpdateTimestamp
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property availableQuantity (base name: "availableQuantity")', function() {
      // uncomment below and update the code to test the property availableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property damagedQuantity (base name: "damagedQuantity")', function() {
      // uncomment below and update the code to test the property damagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property inFulfillmentProcessQuantity (base name: "inFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property inFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property onHandQuantity (base name: "onHandQuantity")', function() {
      // uncomment below and update the code to test the property onHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openOrderQuantity (base name: "openOrderQuantity")', function() {
      // uncomment below and update the code to test the property openOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openPOQuantity (base name: "openPOQuantity")', function() {
      // uncomment below and update the code to test the property openPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property orderableQuantity (base name: "orderableQuantity")', function() {
      // uncomment below and update the code to test the property orderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unallocatableQuantity (base name: "unallocatableQuantity")', function() {
      // uncomment below and update the code to test the property unallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unavailableQuantity (base name: "unavailableQuantity")', function() {
      // uncomment below and update the code to test the property unavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property totalDemand (base name: "totalDemand")', function() {
      // uncomment below and update the code to test the property totalDemand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property availableQuantityInnerPacks (base name: "availableQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property availableQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property damagedQuantityInnerPacks (base name: "damagedQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property damagedQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property inFulfillmentProcessQuantityInnerPacks (base name: "inFulfillmentProcessQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property inFulfillmentProcessQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property onHandQuantityInnerPacks (base name: "onHandQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property onHandQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openOrderQuantityInnerPacks (base name: "openOrderQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property openOrderQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openPOQuantityInnerPacks (base name: "openPOQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property openPOQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property orderableQuantityInnerPacks (base name: "orderableQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property orderableQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unallocatableQuantityInnerPacks (base name: "unallocatableQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property unallocatableQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unavailableQuantityInnerPacks (base name: "unavailableQuantityInnerPacks")', function() {
      // uncomment below and update the code to test the property unavailableQuantityInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property availableQuantityCases (base name: "availableQuantityCases")', function() {
      // uncomment below and update the code to test the property availableQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property damagedQuantityCases (base name: "damagedQuantityCases")', function() {
      // uncomment below and update the code to test the property damagedQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property inFulfillmentProcessQuantityCases (base name: "inFulfillmentProcessQuantityCases")', function() {
      // uncomment below and update the code to test the property inFulfillmentProcessQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property onHandQuantityCases (base name: "onHandQuantityCases")', function() {
      // uncomment below and update the code to test the property onHandQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openOrderQuantityCases (base name: "openOrderQuantityCases")', function() {
      // uncomment below and update the code to test the property openOrderQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openPOQuantityCases (base name: "openPOQuantityCases")', function() {
      // uncomment below and update the code to test the property openPOQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property orderableQuantityCases (base name: "orderableQuantityCases")', function() {
      // uncomment below and update the code to test the property orderableQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unallocatableQuantityCases (base name: "unallocatableQuantityCases")', function() {
      // uncomment below and update the code to test the property unallocatableQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unavailableQuantityCases (base name: "unavailableQuantityCases")', function() {
      // uncomment below and update the code to test the property unavailableQuantityCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property availableQuantityPallets (base name: "availableQuantityPallets")', function() {
      // uncomment below and update the code to test the property availableQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property damagedQuantityPallets (base name: "damagedQuantityPallets")', function() {
      // uncomment below and update the code to test the property damagedQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property inFulfillmentProcessQuantityPallets (base name: "inFulfillmentProcessQuantityPallets")', function() {
      // uncomment below and update the code to test the property inFulfillmentProcessQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property onHandQuantityPallets (base name: "onHandQuantityPallets")', function() {
      // uncomment below and update the code to test the property onHandQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openOrderQuantityPallets (base name: "openOrderQuantityPallets")', function() {
      // uncomment below and update the code to test the property openOrderQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property openPOQuantityPallets (base name: "openPOQuantityPallets")', function() {
      // uncomment below and update the code to test the property openPOQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property orderableQuantityPallets (base name: "orderableQuantityPallets")', function() {
      // uncomment below and update the code to test the property orderableQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unallocatableQuantityPallets (base name: "unallocatableQuantityPallets")', function() {
      // uncomment below and update the code to test the property unallocatableQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property unavailableQuantityPallets (base name: "unavailableQuantityPallets")', function() {
      // uncomment below and update the code to test the property unavailableQuantityPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property overallDaysOnHand (base name: "overallDaysOnHand")', function() {
      // uncomment below and update the code to test the property overallDaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property overallStockStatus (base name: "overallStockStatus")', function() {
      // uncomment below and update the code to test the property overallStockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property estimatedPallets (base name: "estimatedPallets")', function() {
      // uncomment below and update the code to test the property estimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property estimatedCases (base name: "estimatedCases")', function() {
      // uncomment below and update the code to test the property estimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property estimatedInnerPacks (base name: "estimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property estimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property nextRequestedDeliveryDate (base name: "nextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property nextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse1Id (base name: "warehouse1Id")', function() {
      // uncomment below and update the code to test the property warehouse1Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1AvailableQuantity (base name: "w1AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w1AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1DamagedQuantity (base name: "w1DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w1DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1InFulfillmentProcessQuantity (base name: "w1InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w1InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1OnHandQuantity (base name: "w1OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w1OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1OpenOrderQuantity (base name: "w1OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w1OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1OpenPOQuantity (base name: "w1OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w1OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1OrderableQuantity (base name: "w1OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w1OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1UnallocatableQuantity (base name: "w1UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w1UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1UnavailableQuantity (base name: "w1UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w1UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1DaysOnHand (base name: "w1DaysOnHand")', function() {
      // uncomment below and update the code to test the property w1DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1StockStatus (base name: "w1StockStatus")', function() {
      // uncomment below and update the code to test the property w1StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1EstimatedPallets (base name: "w1EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w1EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1EstimatedCases (base name: "w1EstimatedCases")', function() {
      // uncomment below and update the code to test the property w1EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1EstimatedInnerPacks (base name: "w1EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w1EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w1NextRequestedDeliveryDate (base name: "w1NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w1NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse2Id (base name: "warehouse2Id")', function() {
      // uncomment below and update the code to test the property warehouse2Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2AvailableQuantity (base name: "w2AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w2AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2DamagedQuantity (base name: "w2DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w2DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2InFulfillmentProcessQuantity (base name: "w2InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w2InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2OnHandQuantity (base name: "w2OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w2OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2OpenOrderQuantity (base name: "w2OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w2OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2OpenPOQuantity (base name: "w2OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w2OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2OrderableQuantity (base name: "w2OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w2OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2UnallocatableQuantity (base name: "w2UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w2UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2UnavailableQuantity (base name: "w2UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w2UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2DaysOnHand (base name: "w2DaysOnHand")', function() {
      // uncomment below and update the code to test the property w2DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2StockStatus (base name: "w2StockStatus")', function() {
      // uncomment below and update the code to test the property w2StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2EstimatedPallets (base name: "w2EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w2EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2EstimatedCases (base name: "w2EstimatedCases")', function() {
      // uncomment below and update the code to test the property w2EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2EstimatedInnerPacks (base name: "w2EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w2EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w2NextRequestedDeliveryDate (base name: "w2NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w2NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse3Id (base name: "warehouse3Id")', function() {
      // uncomment below and update the code to test the property warehouse3Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3AvailableQuantity (base name: "w3AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w3AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3DamagedQuantity (base name: "w3DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w3DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3InFulfillmentProcessQuantity (base name: "w3InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w3InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3OnHandQuantity (base name: "w3OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w3OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3OpenOrderQuantity (base name: "w3OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w3OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3OpenPOQuantity (base name: "w3OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w3OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3OrderableQuantity (base name: "w3OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w3OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3UnallocatableQuantity (base name: "w3UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w3UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3UnavailableQuantity (base name: "w3UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w3UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3DaysOnHand (base name: "w3DaysOnHand")', function() {
      // uncomment below and update the code to test the property w3DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3StockStatus (base name: "w3StockStatus")', function() {
      // uncomment below and update the code to test the property w3StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3EstimatedPallets (base name: "w3EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w3EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3EstimatedCases (base name: "w3EstimatedCases")', function() {
      // uncomment below and update the code to test the property w3EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3EstimatedInnerPacks (base name: "w3EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w3EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w3NextRequestedDeliveryDate (base name: "w3NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w3NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse4Id (base name: "warehouse4Id")', function() {
      // uncomment below and update the code to test the property warehouse4Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4AvailableQuantity (base name: "w4AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w4AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4DamagedQuantity (base name: "w4DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w4DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4InFulfillmentProcessQuantity (base name: "w4InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w4InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4OnHandQuantity (base name: "w4OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w4OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4OpenOrderQuantity (base name: "w4OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w4OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4OpenPOQuantity (base name: "w4OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w4OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4OrderableQuantity (base name: "w4OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w4OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4UnallocatableQuantity (base name: "w4UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w4UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4UnavailableQuantity (base name: "w4UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w4UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4DaysOnHand (base name: "w4DaysOnHand")', function() {
      // uncomment below and update the code to test the property w4DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4StockStatus (base name: "w4StockStatus")', function() {
      // uncomment below and update the code to test the property w4StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4EstimatedPallets (base name: "w4EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w4EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4EstimatedCases (base name: "w4EstimatedCases")', function() {
      // uncomment below and update the code to test the property w4EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4EstimatedInnerPacks (base name: "w4EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w4EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w4NextRequestedDeliveryDate (base name: "w4NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w4NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse5Id (base name: "warehouse5Id")', function() {
      // uncomment below and update the code to test the property warehouse5Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5AvailableQuantity (base name: "w5AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w5AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5DamagedQuantity (base name: "w5DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w5DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5InFulfillmentProcessQuantity (base name: "w5InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w5InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5OnHandQuantity (base name: "w5OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w5OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5OpenOrderQuantity (base name: "w5OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w5OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5OpenPOQuantity (base name: "w5OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w5OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5OrderableQuantity (base name: "w5OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w5OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5UnallocatableQuantity (base name: "w5UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w5UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5UnavailableQuantity (base name: "w5UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w5UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5DaysOnHand (base name: "w5DaysOnHand")', function() {
      // uncomment below and update the code to test the property w5DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5StockStatus (base name: "w5StockStatus")', function() {
      // uncomment below and update the code to test the property w5StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5EstimatedPallets (base name: "w5EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w5EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5EstimatedCases (base name: "w5EstimatedCases")', function() {
      // uncomment below and update the code to test the property w5EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5EstimatedInnerPacks (base name: "w5EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w5EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w5NextRequestedDeliveryDate (base name: "w5NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w5NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse6Id (base name: "warehouse6Id")', function() {
      // uncomment below and update the code to test the property warehouse6Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6AvailableQuantity (base name: "w6AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w6AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6DamagedQuantity (base name: "w6DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w6DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6InFulfillmentProcessQuantity (base name: "w6InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w6InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6OnHandQuantity (base name: "w6OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w6OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6OpenOrderQuantity (base name: "w6OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w6OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6OpenPOQuantity (base name: "w6OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w6OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6OrderableQuantity (base name: "w6OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w6OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6UnallocatableQuantity (base name: "w6UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w6UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6UnavailableQuantity (base name: "w6UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w6UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6DaysOnHand (base name: "w6DaysOnHand")', function() {
      // uncomment below and update the code to test the property w6DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6StockStatus (base name: "w6StockStatus")', function() {
      // uncomment below and update the code to test the property w6StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6EstimatedPallets (base name: "w6EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w6EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6EstimatedCases (base name: "w6EstimatedCases")', function() {
      // uncomment below and update the code to test the property w6EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6EstimatedInnerPacks (base name: "w6EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w6EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w6NextRequestedDeliveryDate (base name: "w6NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w6NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse7Id (base name: "warehouse7Id")', function() {
      // uncomment below and update the code to test the property warehouse7Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7AvailableQuantity (base name: "w7AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w7AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7DamagedQuantity (base name: "w7DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w7DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7InFulfillmentProcessQuantity (base name: "w7InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w7InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7OnHandQuantity (base name: "w7OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w7OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7OpenOrderQuantity (base name: "w7OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w7OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7OpenPOQuantity (base name: "w7OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w7OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7OrderableQuantity (base name: "w7OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w7OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7UnallocatableQuantity (base name: "w7UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w7UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7UnavailableQuantity (base name: "w7UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w7UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7DaysOnHand (base name: "w7DaysOnHand")', function() {
      // uncomment below and update the code to test the property w7DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7StockStatus (base name: "w7StockStatus")', function() {
      // uncomment below and update the code to test the property w7StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7EstimatedPallets (base name: "w7EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w7EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7EstimatedCases (base name: "w7EstimatedCases")', function() {
      // uncomment below and update the code to test the property w7EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7EstimatedInnerPacks (base name: "w7EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w7EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w7NextRequestedDeliveryDate (base name: "w7NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w7NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse8Id (base name: "warehouse8Id")', function() {
      // uncomment below and update the code to test the property warehouse8Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8AvailableQuantity (base name: "w8AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w8AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8DamagedQuantity (base name: "w8DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w8DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8InFulfillmentProcessQuantity (base name: "w8InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w8InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8OnHandQuantity (base name: "w8OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w8OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8OpenOrderQuantity (base name: "w8OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w8OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8OpenPOQuantity (base name: "w8OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w8OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8OrderableQuantity (base name: "w8OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w8OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8UnallocatableQuantity (base name: "w8UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w8UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8UnavailableQuantity (base name: "w8UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w8UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8DaysOnHand (base name: "w8DaysOnHand")', function() {
      // uncomment below and update the code to test the property w8DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8StockStatus (base name: "w8StockStatus")', function() {
      // uncomment below and update the code to test the property w8StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8EstimatedPallets (base name: "w8EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w8EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8EstimatedCases (base name: "w8EstimatedCases")', function() {
      // uncomment below and update the code to test the property w8EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8EstimatedInnerPacks (base name: "w8EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w8EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w8NextRequestedDeliveryDate (base name: "w8NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w8NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse9Id (base name: "warehouse9Id")', function() {
      // uncomment below and update the code to test the property warehouse9Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9AvailableQuantity (base name: "w9AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w9AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9DamagedQuantity (base name: "w9DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w9DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9InFulfillmentProcessQuantity (base name: "w9InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w9InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9OnHandQuantity (base name: "w9OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w9OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9OpenOrderQuantity (base name: "w9OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w9OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9OpenPOQuantity (base name: "w9OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w9OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9OrderableQuantity (base name: "w9OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w9OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9UnallocatableQuantity (base name: "w9UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w9UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9UnavailableQuantity (base name: "w9UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w9UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9DaysOnHand (base name: "w9DaysOnHand")', function() {
      // uncomment below and update the code to test the property w9DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9StockStatus (base name: "w9StockStatus")', function() {
      // uncomment below and update the code to test the property w9StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9EstimatedPallets (base name: "w9EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w9EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9EstimatedCases (base name: "w9EstimatedCases")', function() {
      // uncomment below and update the code to test the property w9EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9EstimatedInnerPacks (base name: "w9EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w9EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w9NextRequestedDeliveryDate (base name: "w9NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w9NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property warehouse10Id (base name: "warehouse10Id")', function() {
      // uncomment below and update the code to test the property warehouse10Id
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10AvailableQuantity (base name: "w10AvailableQuantity")', function() {
      // uncomment below and update the code to test the property w10AvailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10DamagedQuantity (base name: "w10DamagedQuantity")', function() {
      // uncomment below and update the code to test the property w10DamagedQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10InFulfillmentProcessQuantity (base name: "w10InFulfillmentProcessQuantity")', function() {
      // uncomment below and update the code to test the property w10InFulfillmentProcessQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10OnHandQuantity (base name: "w10OnHandQuantity")', function() {
      // uncomment below and update the code to test the property w10OnHandQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10OpenOrderQuantity (base name: "w10OpenOrderQuantity")', function() {
      // uncomment below and update the code to test the property w10OpenOrderQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10OpenPOQuantity (base name: "w10OpenPOQuantity")', function() {
      // uncomment below and update the code to test the property w10OpenPOQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10OrderableQuantity (base name: "w10OrderableQuantity")', function() {
      // uncomment below and update the code to test the property w10OrderableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10UnallocatableQuantity (base name: "w10UnallocatableQuantity")', function() {
      // uncomment below and update the code to test the property w10UnallocatableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10UnavailableQuantity (base name: "w10UnavailableQuantity")', function() {
      // uncomment below and update the code to test the property w10UnavailableQuantity
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10DaysOnHand (base name: "w10DaysOnHand")', function() {
      // uncomment below and update the code to test the property w10DaysOnHand
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10StockStatus (base name: "w10StockStatus")', function() {
      // uncomment below and update the code to test the property w10StockStatus
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10EstimatedPallets (base name: "w10EstimatedPallets")', function() {
      // uncomment below and update the code to test the property w10EstimatedPallets
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10EstimatedCases (base name: "w10EstimatedCases")', function() {
      // uncomment below and update the code to test the property w10EstimatedCases
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10EstimatedInnerPacks (base name: "w10EstimatedInnerPacks")', function() {
      // uncomment below and update the code to test the property w10EstimatedInnerPacks
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property w10NextRequestedDeliveryDate (base name: "w10NextRequestedDeliveryDate")', function() {
      // uncomment below and update the code to test the property w10NextRequestedDeliveryDate
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.Item();
      //expect(instance).to.be();
    });

  });

}));
