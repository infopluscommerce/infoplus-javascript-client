/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.Job();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Job', function() {
    it('should create an instance of Job', function() {
      // uncomment below and update the code to test Job
      //var instane = new infoplus.Job();
      //expect(instance).to.be.a(infoplus.Job);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property sourceJobRecipeId (base name: "sourceJobRecipeId")', function() {
      // uncomment below and update the code to test the property sourceJobRecipeId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property assemblyQuantity (base name: "assemblyQuantity")', function() {
      // uncomment below and update the code to test the property assemblyQuantity
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouseId")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property orderNoId (base name: "orderNoId")', function() {
      // uncomment below and update the code to test the property orderNoId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property poNoId (base name: "poNoId")', function() {
      // uncomment below and update the code to test the property poNoId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property workBatchId (base name: "workBatchId")', function() {
      // uncomment below and update the code to test the property workBatchId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property layout (base name: "layout")', function() {
      // uncomment below and update the code to test the property layout
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property trackAssemblies (base name: "trackAssemblies")', function() {
      // uncomment below and update the code to test the property trackAssemblies
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property trackSteps (base name: "trackSteps")', function() {
      // uncomment below and update the code to test the property trackSteps
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property jobNo (base name: "jobNo")', function() {
      // uncomment below and update the code to test the property jobNo
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property assemblyInstructions (base name: "assemblyInstructions")', function() {
      // uncomment below and update the code to test the property assemblyInstructions
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property inputs (base name: "inputs")', function() {
      // uncomment below and update the code to test the property inputs
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property outputs (base name: "outputs")', function() {
      // uncomment below and update the code to test the property outputs
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property steps (base name: "steps")', function() {
      // uncomment below and update the code to test the property steps
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentPlanId (base name: "fulfillmentPlanId")', function() {
      // uncomment below and update the code to test the property fulfillmentPlanId
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property totalPicksPutbacks (base name: "totalPicksPutbacks")', function() {
      // uncomment below and update the code to test the property totalPicksPutbacks
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property completedPicksPutbacks (base name: "completedPicksPutbacks")', function() {
      // uncomment below and update the code to test the property completedPicksPutbacks
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property totalAssemblies (base name: "totalAssemblies")', function() {
      // uncomment below and update the code to test the property totalAssemblies
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property completedAssemblies (base name: "completedAssemblies")', function() {
      // uncomment below and update the code to test the property completedAssemblies
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property totalSteps (base name: "totalSteps")', function() {
      // uncomment below and update the code to test the property totalSteps
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property completedSteps (base name: "completedSteps")', function() {
      // uncomment below and update the code to test the property completedSteps
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property totalReceipts (base name: "totalReceipts")', function() {
      // uncomment below and update the code to test the property totalReceipts
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property completedReceipts (base name: "completedReceipts")', function() {
      // uncomment below and update the code to test the property completedReceipts
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property totalToDo (base name: "totalToDo")', function() {
      // uncomment below and update the code to test the property totalToDo
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property completedToDo (base name: "completedToDo")', function() {
      // uncomment below and update the code to test the property completedToDo
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.Job();
      //expect(instance).to.be();
    });

  });

}));
