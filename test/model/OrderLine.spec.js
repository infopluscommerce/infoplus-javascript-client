/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.OrderLine();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderLine', function() {
    it('should create an instance of OrderLine', function() {
      // uncomment below and update the code to test OrderLine
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be.a(infoplus.OrderLine);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property lineItemId (base name: "lineItemId")', function() {
      // uncomment below and update the code to test the property lineItemId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property customerLineItemNo (base name: "customerLineItemNo")', function() {
      // uncomment below and update the code to test the property customerLineItemNo
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property orderNo (base name: "orderNo")', function() {
      // uncomment below and update the code to test the property orderNo
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property poNoId (base name: "poNoId")', function() {
      // uncomment below and update the code to test the property poNoId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property orderedQty (base name: "orderedQty")', function() {
      // uncomment below and update the code to test the property orderedQty
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property allowedQty (base name: "allowedQty")', function() {
      // uncomment below and update the code to test the property allowedQty
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property shippedQty (base name: "shippedQty")', function() {
      // uncomment below and update the code to test the property shippedQty
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property backorderQty (base name: "backorderQty")', function() {
      // uncomment below and update the code to test the property backorderQty
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property numberOfWraps (base name: "numberOfWraps")', function() {
      // uncomment below and update the code to test the property numberOfWraps
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property numberOfCases (base name: "numberOfCases")', function() {
      // uncomment below and update the code to test the property numberOfCases
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property numberOfInnerPacks (base name: "numberOfInnerPacks")', function() {
      // uncomment below and update the code to test the property numberOfInnerPacks
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property revDate (base name: "revDate")', function() {
      // uncomment below and update the code to test the property revDate
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property chargeCode (base name: "chargeCode")', function() {
      // uncomment below and update the code to test the property chargeCode
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property distributionCode (base name: "distributionCode")', function() {
      // uncomment below and update the code to test the property distributionCode
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property upc (base name: "upc")', function() {
      // uncomment below and update the code to test the property upc
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property vendorSKU (base name: "vendorSKU")', function() {
      // uncomment below and update the code to test the property vendorSKU
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property orderSourceSKU (base name: "orderSourceSKU")', function() {
      // uncomment below and update the code to test the property orderSourceSKU
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property unitCost (base name: "unitCost")', function() {
      // uncomment below and update the code to test the property unitCost
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property unitSell (base name: "unitSell")', function() {
      // uncomment below and update the code to test the property unitSell
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property unitDiscount (base name: "unitDiscount")', function() {
      // uncomment below and update the code to test the property unitDiscount
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property unitDeclaredValueOverride (base name: "unitDeclaredValueOverride")', function() {
      // uncomment below and update the code to test the property unitDeclaredValueOverride
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property extendedCost (base name: "extendedCost")', function() {
      // uncomment below and update the code to test the property extendedCost
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property extendedSell (base name: "extendedSell")', function() {
      // uncomment below and update the code to test the property extendedSell
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property extendedDiscount (base name: "extendedDiscount")', function() {
      // uncomment below and update the code to test the property extendedDiscount
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property ncExtendedSell (base name: "ncExtendedSell")', function() {
      // uncomment below and update the code to test the property ncExtendedSell
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property extendedDeclaredValueOverride (base name: "extendedDeclaredValueOverride")', function() {
      // uncomment below and update the code to test the property extendedDeclaredValueOverride
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemWeight (base name: "itemWeight")', function() {
      // uncomment below and update the code to test the property itemWeight
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property productionLot (base name: "productionLot")', function() {
      // uncomment below and update the code to test the property productionLot
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property weightPerWrap (base name: "weightPerWrap")', function() {
      // uncomment below and update the code to test the property weightPerWrap
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property sector (base name: "sector")', function() {
      // uncomment below and update the code to test the property sector
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property orderAssemblyInstructions (base name: "orderAssemblyInstructions")', function() {
      // uncomment below and update the code to test the property orderAssemblyInstructions
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemAccountCodeId (base name: "itemAccountCodeId")', function() {
      // uncomment below and update the code to test the property itemAccountCodeId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemLegacyLowStockContactId (base name: "itemLegacyLowStockContactId")', function() {
      // uncomment below and update the code to test the property itemLegacyLowStockContactId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemMajorGroupId (base name: "itemMajorGroupId")', function() {
      // uncomment below and update the code to test the property itemMajorGroupId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemSubGroupId (base name: "itemSubGroupId")', function() {
      // uncomment below and update the code to test the property itemSubGroupId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemProductCodeId (base name: "itemProductCodeId")', function() {
      // uncomment below and update the code to test the property itemProductCodeId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property itemSummaryCodeId (base name: "itemSummaryCodeId")', function() {
      // uncomment below and update the code to test the property itemSummaryCodeId
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentChannel (base name: "fulfillmentChannel")', function() {
      // uncomment below and update the code to test the property fulfillmentChannel
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property dynamicKitComponentList (base name: "dynamicKitComponentList")', function() {
      // uncomment below and update the code to test the property dynamicKitComponentList
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property overrideReceiptsForFulfillmentList (base name: "overrideReceiptsForFulfillmentList")', function() {
      // uncomment below and update the code to test the property overrideReceiptsForFulfillmentList
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.OrderLine();
      //expect(instance).to.be();
    });

  });

}));
