/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.ParcelInvoiceLine();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ParcelInvoiceLine', function() {
    it('should create an instance of ParcelInvoiceLine', function() {
      // uncomment below and update the code to test ParcelInvoiceLine
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be.a(infoplus.ParcelInvoiceLine);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNoId (base name: "invoiceNoId")', function() {
      // uncomment below and update the code to test the property invoiceNoId
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipmentId (base name: "shipmentId")', function() {
      // uncomment below and update the code to test the property shipmentId
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property trackingNo (base name: "trackingNo")', function() {
      // uncomment below and update the code to test the property trackingNo
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipDate (base name: "shipDate")', function() {
      // uncomment below and update the code to test the property shipDate
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property dim1 (base name: "dim1")', function() {
      // uncomment below and update the code to test the property dim1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property dim2 (base name: "dim2")', function() {
      // uncomment below and update the code to test the property dim2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property dim3 (base name: "dim3")', function() {
      // uncomment below and update the code to test the property dim3
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property enteredWeight (base name: "enteredWeight")', function() {
      // uncomment below and update the code to test the property enteredWeight
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property actualWeight (base name: "actualWeight")', function() {
      // uncomment below and update the code to test the property actualWeight
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property billedWeight (base name: "billedWeight")', function() {
      // uncomment below and update the code to test the property billedWeight
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property enteredWeightUnit (base name: "enteredWeightUnit")', function() {
      // uncomment below and update the code to test the property enteredWeightUnit
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property actualWeightUnit (base name: "actualWeightUnit")', function() {
      // uncomment below and update the code to test the property actualWeightUnit
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property billedWeightUnit (base name: "billedWeightUnit")', function() {
      // uncomment below and update the code to test the property billedWeightUnit
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property customerReference (base name: "customerReference")', function() {
      // uncomment below and update the code to test the property customerReference
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipmentReference (base name: "shipmentReference")', function() {
      // uncomment below and update the code to test the property shipmentReference
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property reference3 (base name: "reference3")', function() {
      // uncomment below and update the code to test the property reference3
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property reference4 (base name: "reference4")', function() {
      // uncomment below and update the code to test the property reference4
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property reference5 (base name: "reference5")', function() {
      // uncomment below and update the code to test the property reference5
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property reference6 (base name: "reference6")', function() {
      // uncomment below and update the code to test the property reference6
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property reference7 (base name: "reference7")', function() {
      // uncomment below and update the code to test the property reference7
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromName (base name: "shipFromName")', function() {
      // uncomment below and update the code to test the property shipFromName
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromCompany (base name: "shipFromCompany")', function() {
      // uncomment below and update the code to test the property shipFromCompany
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromStreet1 (base name: "shipFromStreet1")', function() {
      // uncomment below and update the code to test the property shipFromStreet1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromStreet2 (base name: "shipFromStreet2")', function() {
      // uncomment below and update the code to test the property shipFromStreet2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromCity (base name: "shipFromCity")', function() {
      // uncomment below and update the code to test the property shipFromCity
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromState (base name: "shipFromState")', function() {
      // uncomment below and update the code to test the property shipFromState
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromZip (base name: "shipFromZip")', function() {
      // uncomment below and update the code to test the property shipFromZip
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipFromCountry (base name: "shipFromCountry")', function() {
      // uncomment below and update the code to test the property shipFromCountry
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToName (base name: "shipToName")', function() {
      // uncomment below and update the code to test the property shipToName
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToCompany (base name: "shipToCompany")', function() {
      // uncomment below and update the code to test the property shipToCompany
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToStreet1 (base name: "shipToStreet1")', function() {
      // uncomment below and update the code to test the property shipToStreet1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToStreet2 (base name: "shipToStreet2")', function() {
      // uncomment below and update the code to test the property shipToStreet2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToCity (base name: "shipToCity")', function() {
      // uncomment below and update the code to test the property shipToCity
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToState (base name: "shipToState")', function() {
      // uncomment below and update the code to test the property shipToState
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToZip (base name: "shipToZip")', function() {
      // uncomment below and update the code to test the property shipToZip
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property shipToCountry (base name: "shipToCountry")', function() {
      // uncomment below and update the code to test the property shipToCountry
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToName (base name: "originalShipToName")', function() {
      // uncomment below and update the code to test the property originalShipToName
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToCompany (base name: "originalShipToCompany")', function() {
      // uncomment below and update the code to test the property originalShipToCompany
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToStreet1 (base name: "originalShipToStreet1")', function() {
      // uncomment below and update the code to test the property originalShipToStreet1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToStreet2 (base name: "originalShipToStreet2")', function() {
      // uncomment below and update the code to test the property originalShipToStreet2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToCity (base name: "originalShipToCity")', function() {
      // uncomment below and update the code to test the property originalShipToCity
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToState (base name: "originalShipToState")', function() {
      // uncomment below and update the code to test the property originalShipToState
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToZip (base name: "originalShipToZip")', function() {
      // uncomment below and update the code to test the property originalShipToZip
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property originalShipToCountry (base name: "originalShipToCountry")', function() {
      // uncomment below and update the code to test the property originalShipToCountry
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyName (base name: "thirdPartyName")', function() {
      // uncomment below and update the code to test the property thirdPartyName
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyCompany (base name: "thirdPartyCompany")', function() {
      // uncomment below and update the code to test the property thirdPartyCompany
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyStreet1 (base name: "thirdPartyStreet1")', function() {
      // uncomment below and update the code to test the property thirdPartyStreet1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyStreet2 (base name: "thirdPartyStreet2")', function() {
      // uncomment below and update the code to test the property thirdPartyStreet2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyCity (base name: "thirdPartyCity")', function() {
      // uncomment below and update the code to test the property thirdPartyCity
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyState (base name: "thirdPartyState")', function() {
      // uncomment below and update the code to test the property thirdPartyState
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyZip (base name: "thirdPartyZip")', function() {
      // uncomment below and update the code to test the property thirdPartyZip
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyCountry (base name: "thirdPartyCountry")', function() {
      // uncomment below and update the code to test the property thirdPartyCountry
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToName (base name: "soldToName")', function() {
      // uncomment below and update the code to test the property soldToName
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToCompany (base name: "soldToCompany")', function() {
      // uncomment below and update the code to test the property soldToCompany
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToStreet1 (base name: "soldToStreet1")', function() {
      // uncomment below and update the code to test the property soldToStreet1
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToStreet2 (base name: "soldToStreet2")', function() {
      // uncomment below and update the code to test the property soldToStreet2
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToCity (base name: "soldToCity")', function() {
      // uncomment below and update the code to test the property soldToCity
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToState (base name: "soldToState")', function() {
      // uncomment below and update the code to test the property soldToState
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToZip (base name: "soldToZip")', function() {
      // uncomment below and update the code to test the property soldToZip
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property soldToCountry (base name: "soldToCountry")', function() {
      // uncomment below and update the code to test the property soldToCountry
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property freightServiceType (base name: "freightServiceType")', function() {
      // uncomment below and update the code to test the property freightServiceType
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property netCharges (base name: "netCharges")', function() {
      // uncomment below and update the code to test the property netCharges
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property baseFreight (base name: "baseFreight")', function() {
      // uncomment below and update the code to test the property baseFreight
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property grossCharges (base name: "grossCharges")', function() {
      // uncomment below and update the code to test the property grossCharges
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property fuelCharge (base name: "fuelCharge")', function() {
      // uncomment below and update the code to test the property fuelCharge
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property residentialCharge (base name: "residentialCharge")', function() {
      // uncomment below and update the code to test the property residentialCharge
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property adultSignatureCharge (base name: "adultSignatureCharge")', function() {
      // uncomment below and update the code to test the property adultSignatureCharge
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property deliveryAreaCharge (base name: "deliveryAreaCharge")', function() {
      // uncomment below and update the code to test the property deliveryAreaCharge
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property deliveryAreaChargeExtended (base name: "deliveryAreaChargeExtended")', function() {
      // uncomment below and update the code to test the property deliveryAreaChargeExtended
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property addressCorrectionCharge (base name: "addressCorrectionCharge")', function() {
      // uncomment below and update the code to test the property addressCorrectionCharge
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge1Name (base name: "extraCharge1Name")', function() {
      // uncomment below and update the code to test the property extraCharge1Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge1Amount (base name: "extraCharge1Amount")', function() {
      // uncomment below and update the code to test the property extraCharge1Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge2Name (base name: "extraCharge2Name")', function() {
      // uncomment below and update the code to test the property extraCharge2Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge2Amount (base name: "extraCharge2Amount")', function() {
      // uncomment below and update the code to test the property extraCharge2Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge3Name (base name: "extraCharge3Name")', function() {
      // uncomment below and update the code to test the property extraCharge3Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge3Amount (base name: "extraCharge3Amount")', function() {
      // uncomment below and update the code to test the property extraCharge3Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge4Name (base name: "extraCharge4Name")', function() {
      // uncomment below and update the code to test the property extraCharge4Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge4Amount (base name: "extraCharge4Amount")', function() {
      // uncomment below and update the code to test the property extraCharge4Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge5Name (base name: "extraCharge5Name")', function() {
      // uncomment below and update the code to test the property extraCharge5Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge5Amount (base name: "extraCharge5Amount")', function() {
      // uncomment below and update the code to test the property extraCharge5Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge6Name (base name: "extraCharge6Name")', function() {
      // uncomment below and update the code to test the property extraCharge6Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge6Amount (base name: "extraCharge6Amount")', function() {
      // uncomment below and update the code to test the property extraCharge6Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge7Name (base name: "extraCharge7Name")', function() {
      // uncomment below and update the code to test the property extraCharge7Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge7Amount (base name: "extraCharge7Amount")', function() {
      // uncomment below and update the code to test the property extraCharge7Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge8Name (base name: "extraCharge8Name")', function() {
      // uncomment below and update the code to test the property extraCharge8Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge8Amount (base name: "extraCharge8Amount")', function() {
      // uncomment below and update the code to test the property extraCharge8Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge9Name (base name: "extraCharge9Name")', function() {
      // uncomment below and update the code to test the property extraCharge9Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge9Amount (base name: "extraCharge9Amount")', function() {
      // uncomment below and update the code to test the property extraCharge9Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge10Name (base name: "extraCharge10Name")', function() {
      // uncomment below and update the code to test the property extraCharge10Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge10Amount (base name: "extraCharge10Amount")', function() {
      // uncomment below and update the code to test the property extraCharge10Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge11Name (base name: "extraCharge11Name")', function() {
      // uncomment below and update the code to test the property extraCharge11Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge11Amount (base name: "extraCharge11Amount")', function() {
      // uncomment below and update the code to test the property extraCharge11Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge12Name (base name: "extraCharge12Name")', function() {
      // uncomment below and update the code to test the property extraCharge12Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge12Amount (base name: "extraCharge12Amount")', function() {
      // uncomment below and update the code to test the property extraCharge12Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge13Name (base name: "extraCharge13Name")', function() {
      // uncomment below and update the code to test the property extraCharge13Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge13Amount (base name: "extraCharge13Amount")', function() {
      // uncomment below and update the code to test the property extraCharge13Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge14Name (base name: "extraCharge14Name")', function() {
      // uncomment below and update the code to test the property extraCharge14Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge14Amount (base name: "extraCharge14Amount")', function() {
      // uncomment below and update the code to test the property extraCharge14Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge15Name (base name: "extraCharge15Name")', function() {
      // uncomment below and update the code to test the property extraCharge15Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge15Amount (base name: "extraCharge15Amount")', function() {
      // uncomment below and update the code to test the property extraCharge15Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge16Name (base name: "extraCharge16Name")', function() {
      // uncomment below and update the code to test the property extraCharge16Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge16Amount (base name: "extraCharge16Amount")', function() {
      // uncomment below and update the code to test the property extraCharge16Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge17Name (base name: "extraCharge17Name")', function() {
      // uncomment below and update the code to test the property extraCharge17Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge17Amount (base name: "extraCharge17Amount")', function() {
      // uncomment below and update the code to test the property extraCharge17Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge18Name (base name: "extraCharge18Name")', function() {
      // uncomment below and update the code to test the property extraCharge18Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge18Amount (base name: "extraCharge18Amount")', function() {
      // uncomment below and update the code to test the property extraCharge18Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge19Name (base name: "extraCharge19Name")', function() {
      // uncomment below and update the code to test the property extraCharge19Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge19Amount (base name: "extraCharge19Amount")', function() {
      // uncomment below and update the code to test the property extraCharge19Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge20Name (base name: "extraCharge20Name")', function() {
      // uncomment below and update the code to test the property extraCharge20Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge20Amount (base name: "extraCharge20Amount")', function() {
      // uncomment below and update the code to test the property extraCharge20Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge21Name (base name: "extraCharge21Name")', function() {
      // uncomment below and update the code to test the property extraCharge21Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge21Amount (base name: "extraCharge21Amount")', function() {
      // uncomment below and update the code to test the property extraCharge21Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge22Name (base name: "extraCharge22Name")', function() {
      // uncomment below and update the code to test the property extraCharge22Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge22Amount (base name: "extraCharge22Amount")', function() {
      // uncomment below and update the code to test the property extraCharge22Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge23Name (base name: "extraCharge23Name")', function() {
      // uncomment below and update the code to test the property extraCharge23Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge23Amount (base name: "extraCharge23Amount")', function() {
      // uncomment below and update the code to test the property extraCharge23Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge24Name (base name: "extraCharge24Name")', function() {
      // uncomment below and update the code to test the property extraCharge24Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge24Amount (base name: "extraCharge24Amount")', function() {
      // uncomment below and update the code to test the property extraCharge24Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge25Name (base name: "extraCharge25Name")', function() {
      // uncomment below and update the code to test the property extraCharge25Name
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property extraCharge25Amount (base name: "extraCharge25Amount")', function() {
      // uncomment below and update the code to test the property extraCharge25Amount
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.ParcelInvoiceLine();
      //expect(instance).to.be();
    });

  });

}));
