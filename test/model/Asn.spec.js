/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.Asn();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Asn', function() {
    it('should create an instance of Asn', function() {
      // uncomment below and update the code to test Asn
      //var instane = new infoplus.Asn();
      //expect(instance).to.be.a(infoplus.Asn);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property poNo (base name: "poNo")', function() {
      // uncomment below and update the code to test the property poNo
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property vendorId (base name: "vendorId")', function() {
      // uncomment below and update the code to test the property vendorId
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouseId")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property orderDate (base name: "orderDate")', function() {
      // uncomment below and update the code to test the property orderDate
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingName (base name: "billingName")', function() {
      // uncomment below and update the code to test the property billingName
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingAttention (base name: "billingAttention")', function() {
      // uncomment below and update the code to test the property billingAttention
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingStreet1 (base name: "billingStreet1")', function() {
      // uncomment below and update the code to test the property billingStreet1
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingStreet2 (base name: "billingStreet2")', function() {
      // uncomment below and update the code to test the property billingStreet2
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingCity (base name: "billingCity")', function() {
      // uncomment below and update the code to test the property billingCity
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingState (base name: "billingState")', function() {
      // uncomment below and update the code to test the property billingState
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingZipCode (base name: "billingZipCode")', function() {
      // uncomment below and update the code to test the property billingZipCode
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property billingPhone (base name: "billingPhone")', function() {
      // uncomment below and update the code to test the property billingPhone
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToName (base name: "shipToName")', function() {
      // uncomment below and update the code to test the property shipToName
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToAddress (base name: "shipToAddress")', function() {
      // uncomment below and update the code to test the property shipToAddress
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToStreet1 (base name: "shipToStreet1")', function() {
      // uncomment below and update the code to test the property shipToStreet1
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToStreet2 (base name: "shipToStreet2")', function() {
      // uncomment below and update the code to test the property shipToStreet2
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToCity (base name: "shipToCity")', function() {
      // uncomment below and update the code to test the property shipToCity
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToState (base name: "shipToState")', function() {
      // uncomment below and update the code to test the property shipToState
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToZipCode (base name: "shipToZipCode")', function() {
      // uncomment below and update the code to test the property shipToZipCode
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property shipToPhone (base name: "shipToPhone")', function() {
      // uncomment below and update the code to test the property shipToPhone
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateName (base name: "corporateName")', function() {
      // uncomment below and update the code to test the property corporateName
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateAttention (base name: "corporateAttention")', function() {
      // uncomment below and update the code to test the property corporateAttention
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateStreet1 (base name: "corporateStreet1")', function() {
      // uncomment below and update the code to test the property corporateStreet1
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateStreet2 (base name: "corporateStreet2")', function() {
      // uncomment below and update the code to test the property corporateStreet2
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateCity (base name: "corporateCity")', function() {
      // uncomment below and update the code to test the property corporateCity
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateState (base name: "corporateState")', function() {
      // uncomment below and update the code to test the property corporateState
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property corporateZipCode (base name: "corporateZipCode")', function() {
      // uncomment below and update the code to test the property corporateZipCode
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property accountCode (base name: "accountCode")', function() {
      // uncomment below and update the code to test the property accountCode
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property buyer (base name: "buyer")', function() {
      // uncomment below and update the code to test the property buyer
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property carrier (base name: "carrier")', function() {
      // uncomment below and update the code to test the property carrier
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property confTo (base name: "confTo")', function() {
      // uncomment below and update the code to test the property confTo
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property fob (base name: "fob")', function() {
      // uncomment below and update the code to test the property fob
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property printed (base name: "printed")', function() {
      // uncomment below and update the code to test the property printed
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property projectNo (base name: "projectNo")', function() {
      // uncomment below and update the code to test the property projectNo
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property remarks (base name: "remarks")', function() {
      // uncomment below and update the code to test the property remarks
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property requestBy (base name: "requestBy")', function() {
      // uncomment below and update the code to test the property requestBy
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property terms (base name: "terms")', function() {
      // uncomment below and update the code to test the property terms
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property usedBy (base name: "usedBy")', function() {
      // uncomment below and update the code to test the property usedBy
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property lineItems (base name: "lineItems")', function() {
      // uncomment below and update the code to test the property lineItems
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property transferOrderId (base name: "transferOrderId")', function() {
      // uncomment below and update the code to test the property transferOrderId
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.Asn();
      //expect(instance).to.be();
    });

  });

}));
