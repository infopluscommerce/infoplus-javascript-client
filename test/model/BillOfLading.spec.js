/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.BillOfLading();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BillOfLading', function() {
    it('should create an instance of BillOfLading', function() {
      // uncomment below and update the code to test BillOfLading
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be.a(infoplus.BillOfLading);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property orderNo (base name: "orderNo")', function() {
      // uncomment below and update the code to test the property orderNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property bolNo (base name: "bolNo")', function() {
      // uncomment below and update the code to test the property bolNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property bolDate (base name: "bolDate")', function() {
      // uncomment below and update the code to test the property bolDate
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromName (base name: "shipFromName")', function() {
      // uncomment below and update the code to test the property shipFromName
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromAttention (base name: "shipFromAttention")', function() {
      // uncomment below and update the code to test the property shipFromAttention
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromAddress (base name: "shipFromAddress")', function() {
      // uncomment below and update the code to test the property shipFromAddress
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromCity (base name: "shipFromCity")', function() {
      // uncomment below and update the code to test the property shipFromCity
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromState (base name: "shipFromState")', function() {
      // uncomment below and update the code to test the property shipFromState
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromZip (base name: "shipFromZip")', function() {
      // uncomment below and update the code to test the property shipFromZip
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipFromCountry (base name: "shipFromCountry")', function() {
      // uncomment below and update the code to test the property shipFromCountry
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property sid (base name: "sid")', function() {
      // uncomment below and update the code to test the property sid
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property isShipFromFOB (base name: "isShipFromFOB")', function() {
      // uncomment below and update the code to test the property isShipFromFOB
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToName (base name: "shipToName")', function() {
      // uncomment below and update the code to test the property shipToName
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToAttention (base name: "shipToAttention")', function() {
      // uncomment below and update the code to test the property shipToAttention
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToAddress (base name: "shipToAddress")', function() {
      // uncomment below and update the code to test the property shipToAddress
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToCity (base name: "shipToCity")', function() {
      // uncomment below and update the code to test the property shipToCity
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToState (base name: "shipToState")', function() {
      // uncomment below and update the code to test the property shipToState
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToZip (base name: "shipToZip")', function() {
      // uncomment below and update the code to test the property shipToZip
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToCountry (base name: "shipToCountry")', function() {
      // uncomment below and update the code to test the property shipToCountry
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property shipToLocationNo (base name: "shipToLocationNo")', function() {
      // uncomment below and update the code to test the property shipToLocationNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property cid (base name: "cid")', function() {
      // uncomment below and update the code to test the property cid
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property isShipToFOB (base name: "isShipToFOB")', function() {
      // uncomment below and update the code to test the property isShipToFOB
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToName (base name: "billToName")', function() {
      // uncomment below and update the code to test the property billToName
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToAttention (base name: "billToAttention")', function() {
      // uncomment below and update the code to test the property billToAttention
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToAddress (base name: "billToAddress")', function() {
      // uncomment below and update the code to test the property billToAddress
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToCity (base name: "billToCity")', function() {
      // uncomment below and update the code to test the property billToCity
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToState (base name: "billToState")', function() {
      // uncomment below and update the code to test the property billToState
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToZip (base name: "billToZip")', function() {
      // uncomment below and update the code to test the property billToZip
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property billToCountry (base name: "billToCountry")', function() {
      // uncomment below and update the code to test the property billToCountry
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property isTrailerLoadedByShipper (base name: "isTrailerLoadedByShipper")', function() {
      // uncomment below and update the code to test the property isTrailerLoadedByShipper
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property byDriver (base name: "byDriver")', function() {
      // uncomment below and update the code to test the property byDriver
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property codAmount (base name: "codAmount")', function() {
      // uncomment below and update the code to test the property codAmount
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property feeTermsCollect (base name: "feeTermsCollect")', function() {
      // uncomment below and update the code to test the property feeTermsCollect
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property feeTermsPrepaid (base name: "feeTermsPrepaid")', function() {
      // uncomment below and update the code to test the property feeTermsPrepaid
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property customerCheckAcceptable (base name: "customerCheckAcceptable")', function() {
      // uncomment below and update the code to test the property customerCheckAcceptable
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property carrierName (base name: "carrierName")', function() {
      // uncomment below and update the code to test the property carrierName
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property trailerNo (base name: "trailerNo")', function() {
      // uncomment below and update the code to test the property trailerNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property sealNo (base name: "sealNo")', function() {
      // uncomment below and update the code to test the property sealNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property scac (base name: "scac")', function() {
      // uncomment below and update the code to test the property scac
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property proNo (base name: "proNo")', function() {
      // uncomment below and update the code to test the property proNo
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property prepaid (base name: "prepaid")', function() {
      // uncomment below and update the code to test the property prepaid
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property collect (base name: "collect")', function() {
      // uncomment below and update the code to test the property collect
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property thirdParty (base name: "thirdParty")', function() {
      // uncomment below and update the code to test the property thirdParty
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property isThisAMasterBOL (base name: "isThisAMasterBOL")', function() {
      // uncomment below and update the code to test the property isThisAMasterBOL
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property masterBOLId (base name: "masterBOLId")', function() {
      // uncomment below and update the code to test the property masterBOLId
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property isFreightCountedByShipper (base name: "isFreightCountedByShipper")', function() {
      // uncomment below and update the code to test the property isFreightCountedByShipper
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property byDriverPallets (base name: "byDriverPallets")', function() {
      // uncomment below and update the code to test the property byDriverPallets
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property byDriverPieces (base name: "byDriverPieces")', function() {
      // uncomment below and update the code to test the property byDriverPieces
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property specialInstructions (base name: "specialInstructions")', function() {
      // uncomment below and update the code to test the property specialInstructions
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property orderInfoLines (base name: "orderInfoLines")', function() {
      // uncomment below and update the code to test the property orderInfoLines
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property carrierInfoLines (base name: "carrierInfoLines")', function() {
      // uncomment below and update the code to test the property carrierInfoLines
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.BillOfLading();
      //expect(instance).to.be();
    });

  });

}));
