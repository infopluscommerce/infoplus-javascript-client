/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.Shipment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Shipment', function() {
    it('should create an instance of Shipment', function() {
      // uncomment below and update the code to test Shipment
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be.a(infoplus.Shipment);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property modifyDate (base name: "modifyDate")', function() {
      // uncomment below and update the code to test the property modifyDate
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipDate (base name: "shipDate")', function() {
      // uncomment below and update the code to test the property shipDate
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property deliveredDate (base name: "deliveredDate")', function() {
      // uncomment below and update the code to test the property deliveredDate
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property trackingNo (base name: "trackingNo")', function() {
      // uncomment below and update the code to test the property trackingNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouseId")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property lobId (base name: "lobId")', function() {
      // uncomment below and update the code to test the property lobId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property orderNo (base name: "orderNo")', function() {
      // uncomment below and update the code to test the property orderNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property orderNoList (base name: "orderNoList")', function() {
      // uncomment below and update the code to test the property orderNoList
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cartonNo (base name: "cartonNo")', function() {
      // uncomment below and update the code to test the property cartonNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property numberOfCartons (base name: "numberOfCartons")', function() {
      // uncomment below and update the code to test the property numberOfCartons
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipped (base name: "shipped")', function() {
      // uncomment below and update the code to test the property shipped
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property casebreak (base name: "casebreak")', function() {
      // uncomment below and update the code to test the property casebreak
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property carrierServiceId (base name: "carrierServiceId")', function() {
      // uncomment below and update the code to test the property carrierServiceId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property dim1In (base name: "dim1In")', function() {
      // uncomment below and update the code to test the property dim1In
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property dim2In (base name: "dim2In")', function() {
      // uncomment below and update the code to test the property dim2In
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property dim3In (base name: "dim3In")', function() {
      // uncomment below and update the code to test the property dim3In
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property estimatedZone (base name: "estimatedZone")', function() {
      // uncomment below and update the code to test the property estimatedZone
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property parcelAccountNo (base name: "parcelAccountNo")', function() {
      // uncomment below and update the code to test the property parcelAccountNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyParcelAccountNo (base name: "thirdPartyParcelAccountNo")', function() {
      // uncomment below and update the code to test the property thirdPartyParcelAccountNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipmentId (base name: "shipmentId")', function() {
      // uncomment below and update the code to test the property shipmentId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property manifestId (base name: "manifestId")', function() {
      // uncomment below and update the code to test the property manifestId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property residential (base name: "residential")', function() {
      // uncomment below and update the code to test the property residential
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property billingOption (base name: "billingOption")', function() {
      // uncomment below and update the code to test the property billingOption
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property weightLbs (base name: "weightLbs")', function() {
      // uncomment below and update the code to test the property weightLbs
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property dimWeight (base name: "dimWeight")', function() {
      // uncomment below and update the code to test the property dimWeight
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property licensePlateNumber (base name: "licensePlateNumber")', function() {
      // uncomment below and update the code to test the property licensePlateNumber
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property chargedFreightAmount (base name: "chargedFreightAmount")', function() {
      // uncomment below and update the code to test the property chargedFreightAmount
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property publishedFreightAmount (base name: "publishedFreightAmount")', function() {
      // uncomment below and update the code to test the property publishedFreightAmount
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property retailFreightAmount (base name: "retailFreightAmount")', function() {
      // uncomment below and update the code to test the property retailFreightAmount
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property externalShippingSystemId (base name: "externalShippingSystemId")', function() {
      // uncomment below and update the code to test the property externalShippingSystemId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipmentType (base name: "shipmentType")', function() {
      // uncomment below and update the code to test the property shipmentType
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property carrierCompany (base name: "carrierCompany")', function() {
      // uncomment below and update the code to test the property carrierCompany
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cartonId (base name: "cartonId")', function() {
      // uncomment below and update the code to test the property cartonId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cartonTypeId (base name: "cartonTypeId")', function() {
      // uncomment below and update the code to test the property cartonTypeId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property deliveryMessage (base name: "deliveryMessage")', function() {
      // uncomment below and update the code to test the property deliveryMessage
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property loadId (base name: "loadId")', function() {
      // uncomment below and update the code to test the property loadId
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property omsOrderNo (base name: "omsOrderNo")', function() {
      // uncomment below and update the code to test the property omsOrderNo
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property carrier (base name: "carrier")', function() {
      // uncomment below and update the code to test the property carrier
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new infoplus.Shipment();
      //expect(instance).to.be();
    });

  });

}));
