/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.WarehouseInventoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WarehouseInventoryApi', function() {
    describe('addWarehouseInventoryAudit', function() {
      it('should call addWarehouseInventoryAudit successfully', function(done) {
        //uncomment below and update the code to test addWarehouseInventoryAudit
        //instance.addWarehouseInventoryAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseInventoryFile', function() {
      it('should call addWarehouseInventoryFile successfully', function(done) {
        //uncomment below and update the code to test addWarehouseInventoryFile
        //instance.addWarehouseInventoryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseInventoryFileByURL', function() {
      it('should call addWarehouseInventoryFileByURL successfully', function(done) {
        //uncomment below and update the code to test addWarehouseInventoryFileByURL
        //instance.addWarehouseInventoryFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseInventoryTag', function() {
      it('should call addWarehouseInventoryTag successfully', function(done) {
        //uncomment below and update the code to test addWarehouseInventoryTag
        //instance.addWarehouseInventoryTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWarehouseInventoryFile', function() {
      it('should call deleteWarehouseInventoryFile successfully', function(done) {
        //uncomment below and update the code to test deleteWarehouseInventoryFile
        //instance.deleteWarehouseInventoryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWarehouseInventoryTag', function() {
      it('should call deleteWarehouseInventoryTag successfully', function(done) {
        //uncomment below and update the code to test deleteWarehouseInventoryTag
        //instance.deleteWarehouseInventoryTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateWarehouseInventoryById', function() {
      it('should call getDuplicateWarehouseInventoryById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateWarehouseInventoryById
        //instance.getDuplicateWarehouseInventoryById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseInventoryByFilter', function() {
      it('should call getWarehouseInventoryByFilter successfully', function(done) {
        //uncomment below and update the code to test getWarehouseInventoryByFilter
        //instance.getWarehouseInventoryByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseInventoryById', function() {
      it('should call getWarehouseInventoryById successfully', function(done) {
        //uncomment below and update the code to test getWarehouseInventoryById
        //instance.getWarehouseInventoryById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseInventoryFiles', function() {
      it('should call getWarehouseInventoryFiles successfully', function(done) {
        //uncomment below and update the code to test getWarehouseInventoryFiles
        //instance.getWarehouseInventoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseInventoryTags', function() {
      it('should call getWarehouseInventoryTags successfully', function(done) {
        //uncomment below and update the code to test getWarehouseInventoryTags
        //instance.getWarehouseInventoryTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
