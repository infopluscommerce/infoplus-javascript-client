/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.LocationAddressSchemeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LocationAddressSchemeApi', function() {
    describe('addLocationAddressScheme', function() {
      it('should call addLocationAddressScheme successfully', function(done) {
        //uncomment below and update the code to test addLocationAddressScheme
        //instance.addLocationAddressScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationAddressSchemeAudit', function() {
      it('should call addLocationAddressSchemeAudit successfully', function(done) {
        //uncomment below and update the code to test addLocationAddressSchemeAudit
        //instance.addLocationAddressSchemeAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationAddressSchemeFile', function() {
      it('should call addLocationAddressSchemeFile successfully', function(done) {
        //uncomment below and update the code to test addLocationAddressSchemeFile
        //instance.addLocationAddressSchemeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationAddressSchemeFileByURL', function() {
      it('should call addLocationAddressSchemeFileByURL successfully', function(done) {
        //uncomment below and update the code to test addLocationAddressSchemeFileByURL
        //instance.addLocationAddressSchemeFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationAddressSchemeTag', function() {
      it('should call addLocationAddressSchemeTag successfully', function(done) {
        //uncomment below and update the code to test addLocationAddressSchemeTag
        //instance.addLocationAddressSchemeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationAddressScheme', function() {
      it('should call deleteLocationAddressScheme successfully', function(done) {
        //uncomment below and update the code to test deleteLocationAddressScheme
        //instance.deleteLocationAddressScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationAddressSchemeFile', function() {
      it('should call deleteLocationAddressSchemeFile successfully', function(done) {
        //uncomment below and update the code to test deleteLocationAddressSchemeFile
        //instance.deleteLocationAddressSchemeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationAddressSchemeTag', function() {
      it('should call deleteLocationAddressSchemeTag successfully', function(done) {
        //uncomment below and update the code to test deleteLocationAddressSchemeTag
        //instance.deleteLocationAddressSchemeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateLocationAddressSchemeById', function() {
      it('should call getDuplicateLocationAddressSchemeById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateLocationAddressSchemeById
        //instance.getDuplicateLocationAddressSchemeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationAddressSchemeByFilter', function() {
      it('should call getLocationAddressSchemeByFilter successfully', function(done) {
        //uncomment below and update the code to test getLocationAddressSchemeByFilter
        //instance.getLocationAddressSchemeByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationAddressSchemeById', function() {
      it('should call getLocationAddressSchemeById successfully', function(done) {
        //uncomment below and update the code to test getLocationAddressSchemeById
        //instance.getLocationAddressSchemeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationAddressSchemeFiles', function() {
      it('should call getLocationAddressSchemeFiles successfully', function(done) {
        //uncomment below and update the code to test getLocationAddressSchemeFiles
        //instance.getLocationAddressSchemeFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationAddressSchemeTags', function() {
      it('should call getLocationAddressSchemeTags successfully', function(done) {
        //uncomment below and update the code to test getLocationAddressSchemeTags
        //instance.getLocationAddressSchemeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationAddressScheme', function() {
      it('should call updateLocationAddressScheme successfully', function(done) {
        //uncomment below and update the code to test updateLocationAddressScheme
        //instance.updateLocationAddressScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationAddressSchemeCustomFields', function() {
      it('should call updateLocationAddressSchemeCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateLocationAddressSchemeCustomFields
        //instance.updateLocationAddressSchemeCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
