/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.ItemCategoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemCategoryApi', function() {
    describe('addItemCategory', function() {
      it('should call addItemCategory successfully', function(done) {
        //uncomment below and update the code to test addItemCategory
        //instance.addItemCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addItemCategoryAudit', function() {
      it('should call addItemCategoryAudit successfully', function(done) {
        //uncomment below and update the code to test addItemCategoryAudit
        //instance.addItemCategoryAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addItemCategoryFile', function() {
      it('should call addItemCategoryFile successfully', function(done) {
        //uncomment below and update the code to test addItemCategoryFile
        //instance.addItemCategoryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addItemCategoryFileByURL', function() {
      it('should call addItemCategoryFileByURL successfully', function(done) {
        //uncomment below and update the code to test addItemCategoryFileByURL
        //instance.addItemCategoryFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addItemCategoryTag', function() {
      it('should call addItemCategoryTag successfully', function(done) {
        //uncomment below and update the code to test addItemCategoryTag
        //instance.addItemCategoryTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItemCategory', function() {
      it('should call deleteItemCategory successfully', function(done) {
        //uncomment below and update the code to test deleteItemCategory
        //instance.deleteItemCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItemCategoryFile', function() {
      it('should call deleteItemCategoryFile successfully', function(done) {
        //uncomment below and update the code to test deleteItemCategoryFile
        //instance.deleteItemCategoryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItemCategoryTag', function() {
      it('should call deleteItemCategoryTag successfully', function(done) {
        //uncomment below and update the code to test deleteItemCategoryTag
        //instance.deleteItemCategoryTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateItemCategoryById', function() {
      it('should call getDuplicateItemCategoryById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateItemCategoryById
        //instance.getDuplicateItemCategoryById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemCategoryByFilter', function() {
      it('should call getItemCategoryByFilter successfully', function(done) {
        //uncomment below and update the code to test getItemCategoryByFilter
        //instance.getItemCategoryByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemCategoryById', function() {
      it('should call getItemCategoryById successfully', function(done) {
        //uncomment below and update the code to test getItemCategoryById
        //instance.getItemCategoryById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemCategoryFiles', function() {
      it('should call getItemCategoryFiles successfully', function(done) {
        //uncomment below and update the code to test getItemCategoryFiles
        //instance.getItemCategoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemCategoryTags', function() {
      it('should call getItemCategoryTags successfully', function(done) {
        //uncomment below and update the code to test getItemCategoryTags
        //instance.getItemCategoryTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateItemCategory', function() {
      it('should call updateItemCategory successfully', function(done) {
        //uncomment below and update the code to test updateItemCategory
        //instance.updateItemCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
