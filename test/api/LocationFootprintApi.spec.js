/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.LocationFootprintApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LocationFootprintApi', function() {
    describe('addLocationFootprint', function() {
      it('should call addLocationFootprint successfully', function(done) {
        //uncomment below and update the code to test addLocationFootprint
        //instance.addLocationFootprint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationFootprintAudit', function() {
      it('should call addLocationFootprintAudit successfully', function(done) {
        //uncomment below and update the code to test addLocationFootprintAudit
        //instance.addLocationFootprintAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationFootprintFile', function() {
      it('should call addLocationFootprintFile successfully', function(done) {
        //uncomment below and update the code to test addLocationFootprintFile
        //instance.addLocationFootprintFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationFootprintFileByURL', function() {
      it('should call addLocationFootprintFileByURL successfully', function(done) {
        //uncomment below and update the code to test addLocationFootprintFileByURL
        //instance.addLocationFootprintFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLocationFootprintTag', function() {
      it('should call addLocationFootprintTag successfully', function(done) {
        //uncomment below and update the code to test addLocationFootprintTag
        //instance.addLocationFootprintTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationFootprint', function() {
      it('should call deleteLocationFootprint successfully', function(done) {
        //uncomment below and update the code to test deleteLocationFootprint
        //instance.deleteLocationFootprint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationFootprintFile', function() {
      it('should call deleteLocationFootprintFile successfully', function(done) {
        //uncomment below and update the code to test deleteLocationFootprintFile
        //instance.deleteLocationFootprintFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocationFootprintTag', function() {
      it('should call deleteLocationFootprintTag successfully', function(done) {
        //uncomment below and update the code to test deleteLocationFootprintTag
        //instance.deleteLocationFootprintTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateLocationFootprintById', function() {
      it('should call getDuplicateLocationFootprintById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateLocationFootprintById
        //instance.getDuplicateLocationFootprintById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationFootprintByFilter', function() {
      it('should call getLocationFootprintByFilter successfully', function(done) {
        //uncomment below and update the code to test getLocationFootprintByFilter
        //instance.getLocationFootprintByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationFootprintById', function() {
      it('should call getLocationFootprintById successfully', function(done) {
        //uncomment below and update the code to test getLocationFootprintById
        //instance.getLocationFootprintById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationFootprintFiles', function() {
      it('should call getLocationFootprintFiles successfully', function(done) {
        //uncomment below and update the code to test getLocationFootprintFiles
        //instance.getLocationFootprintFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocationFootprintTags', function() {
      it('should call getLocationFootprintTags successfully', function(done) {
        //uncomment below and update the code to test getLocationFootprintTags
        //instance.getLocationFootprintTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationFootprint', function() {
      it('should call updateLocationFootprint successfully', function(done) {
        //uncomment below and update the code to test updateLocationFootprint
        //instance.updateLocationFootprint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationFootprintCustomFields', function() {
      it('should call updateLocationFootprintCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateLocationFootprintCustomFields
        //instance.updateLocationFootprintCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
