/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.OrderActivityApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderActivityApi', function() {
    describe('addOrderActivity', function() {
      it('should call addOrderActivity successfully', function(done) {
        //uncomment below and update the code to test addOrderActivity
        //instance.addOrderActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addOrderActivityAudit', function() {
      it('should call addOrderActivityAudit successfully', function(done) {
        //uncomment below and update the code to test addOrderActivityAudit
        //instance.addOrderActivityAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addOrderActivityFile', function() {
      it('should call addOrderActivityFile successfully', function(done) {
        //uncomment below and update the code to test addOrderActivityFile
        //instance.addOrderActivityFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addOrderActivityFileByURL', function() {
      it('should call addOrderActivityFileByURL successfully', function(done) {
        //uncomment below and update the code to test addOrderActivityFileByURL
        //instance.addOrderActivityFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addOrderActivityTag', function() {
      it('should call addOrderActivityTag successfully', function(done) {
        //uncomment below and update the code to test addOrderActivityTag
        //instance.addOrderActivityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderActivity', function() {
      it('should call deleteOrderActivity successfully', function(done) {
        //uncomment below and update the code to test deleteOrderActivity
        //instance.deleteOrderActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderActivityFile', function() {
      it('should call deleteOrderActivityFile successfully', function(done) {
        //uncomment below and update the code to test deleteOrderActivityFile
        //instance.deleteOrderActivityFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrderActivityTag', function() {
      it('should call deleteOrderActivityTag successfully', function(done) {
        //uncomment below and update the code to test deleteOrderActivityTag
        //instance.deleteOrderActivityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateOrderActivityById', function() {
      it('should call getDuplicateOrderActivityById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateOrderActivityById
        //instance.getDuplicateOrderActivityById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderActivityByFilter', function() {
      it('should call getOrderActivityByFilter successfully', function(done) {
        //uncomment below and update the code to test getOrderActivityByFilter
        //instance.getOrderActivityByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderActivityById', function() {
      it('should call getOrderActivityById successfully', function(done) {
        //uncomment below and update the code to test getOrderActivityById
        //instance.getOrderActivityById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderActivityFiles', function() {
      it('should call getOrderActivityFiles successfully', function(done) {
        //uncomment below and update the code to test getOrderActivityFiles
        //instance.getOrderActivityFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrderActivityTags', function() {
      it('should call getOrderActivityTags successfully', function(done) {
        //uncomment below and update the code to test getOrderActivityTags
        //instance.getOrderActivityTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderActivity', function() {
      it('should call updateOrderActivity successfully', function(done) {
        //uncomment below and update the code to test updateOrderActivity
        //instance.updateOrderActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
