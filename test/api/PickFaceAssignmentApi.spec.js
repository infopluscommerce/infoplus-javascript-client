/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.PickFaceAssignmentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PickFaceAssignmentApi', function() {
    describe('addPickFaceAssignment', function() {
      it('should call addPickFaceAssignment successfully', function(done) {
        //uncomment below and update the code to test addPickFaceAssignment
        //instance.addPickFaceAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addPickFaceAssignmentAudit', function() {
      it('should call addPickFaceAssignmentAudit successfully', function(done) {
        //uncomment below and update the code to test addPickFaceAssignmentAudit
        //instance.addPickFaceAssignmentAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addPickFaceAssignmentFile', function() {
      it('should call addPickFaceAssignmentFile successfully', function(done) {
        //uncomment below and update the code to test addPickFaceAssignmentFile
        //instance.addPickFaceAssignmentFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addPickFaceAssignmentFileByURL', function() {
      it('should call addPickFaceAssignmentFileByURL successfully', function(done) {
        //uncomment below and update the code to test addPickFaceAssignmentFileByURL
        //instance.addPickFaceAssignmentFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addPickFaceAssignmentTag', function() {
      it('should call addPickFaceAssignmentTag successfully', function(done) {
        //uncomment below and update the code to test addPickFaceAssignmentTag
        //instance.addPickFaceAssignmentTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePickFaceAssignment', function() {
      it('should call deletePickFaceAssignment successfully', function(done) {
        //uncomment below and update the code to test deletePickFaceAssignment
        //instance.deletePickFaceAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePickFaceAssignmentFile', function() {
      it('should call deletePickFaceAssignmentFile successfully', function(done) {
        //uncomment below and update the code to test deletePickFaceAssignmentFile
        //instance.deletePickFaceAssignmentFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePickFaceAssignmentTag', function() {
      it('should call deletePickFaceAssignmentTag successfully', function(done) {
        //uncomment below and update the code to test deletePickFaceAssignmentTag
        //instance.deletePickFaceAssignmentTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicatePickFaceAssignmentById', function() {
      it('should call getDuplicatePickFaceAssignmentById successfully', function(done) {
        //uncomment below and update the code to test getDuplicatePickFaceAssignmentById
        //instance.getDuplicatePickFaceAssignmentById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPickFaceAssignmentByFilter', function() {
      it('should call getPickFaceAssignmentByFilter successfully', function(done) {
        //uncomment below and update the code to test getPickFaceAssignmentByFilter
        //instance.getPickFaceAssignmentByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPickFaceAssignmentById', function() {
      it('should call getPickFaceAssignmentById successfully', function(done) {
        //uncomment below and update the code to test getPickFaceAssignmentById
        //instance.getPickFaceAssignmentById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPickFaceAssignmentFiles', function() {
      it('should call getPickFaceAssignmentFiles successfully', function(done) {
        //uncomment below and update the code to test getPickFaceAssignmentFiles
        //instance.getPickFaceAssignmentFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPickFaceAssignmentTags', function() {
      it('should call getPickFaceAssignmentTags successfully', function(done) {
        //uncomment below and update the code to test getPickFaceAssignmentTags
        //instance.getPickFaceAssignmentTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePickFaceAssignment', function() {
      it('should call updatePickFaceAssignment successfully', function(done) {
        //uncomment below and update the code to test updatePickFaceAssignment
        //instance.updatePickFaceAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePickFaceAssignmentCustomFields', function() {
      it('should call updatePickFaceAssignmentCustomFields successfully', function(done) {
        //uncomment below and update the code to test updatePickFaceAssignmentCustomFields
        //instance.updatePickFaceAssignmentCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
