/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.CartonActivityApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartonActivityApi', function() {
    describe('addCartonActivity', function() {
      it('should call addCartonActivity successfully', function(done) {
        //uncomment below and update the code to test addCartonActivity
        //instance.addCartonActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonActivityAudit', function() {
      it('should call addCartonActivityAudit successfully', function(done) {
        //uncomment below and update the code to test addCartonActivityAudit
        //instance.addCartonActivityAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonActivityFile', function() {
      it('should call addCartonActivityFile successfully', function(done) {
        //uncomment below and update the code to test addCartonActivityFile
        //instance.addCartonActivityFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonActivityFileByURL', function() {
      it('should call addCartonActivityFileByURL successfully', function(done) {
        //uncomment below and update the code to test addCartonActivityFileByURL
        //instance.addCartonActivityFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonActivityTag', function() {
      it('should call addCartonActivityTag successfully', function(done) {
        //uncomment below and update the code to test addCartonActivityTag
        //instance.addCartonActivityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonActivity', function() {
      it('should call deleteCartonActivity successfully', function(done) {
        //uncomment below and update the code to test deleteCartonActivity
        //instance.deleteCartonActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonActivityFile', function() {
      it('should call deleteCartonActivityFile successfully', function(done) {
        //uncomment below and update the code to test deleteCartonActivityFile
        //instance.deleteCartonActivityFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonActivityTag', function() {
      it('should call deleteCartonActivityTag successfully', function(done) {
        //uncomment below and update the code to test deleteCartonActivityTag
        //instance.deleteCartonActivityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonActivityByFilter', function() {
      it('should call getCartonActivityByFilter successfully', function(done) {
        //uncomment below and update the code to test getCartonActivityByFilter
        //instance.getCartonActivityByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonActivityById', function() {
      it('should call getCartonActivityById successfully', function(done) {
        //uncomment below and update the code to test getCartonActivityById
        //instance.getCartonActivityById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonActivityFiles', function() {
      it('should call getCartonActivityFiles successfully', function(done) {
        //uncomment below and update the code to test getCartonActivityFiles
        //instance.getCartonActivityFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonActivityTags', function() {
      it('should call getCartonActivityTags successfully', function(done) {
        //uncomment below and update the code to test getCartonActivityTags
        //instance.getCartonActivityTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateCartonActivityById', function() {
      it('should call getDuplicateCartonActivityById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateCartonActivityById
        //instance.getDuplicateCartonActivityById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCartonActivity', function() {
      it('should call updateCartonActivity successfully', function(done) {
        //uncomment below and update the code to test updateCartonActivity
        //instance.updateCartonActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
