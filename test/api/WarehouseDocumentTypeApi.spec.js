/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.WarehouseDocumentTypeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WarehouseDocumentTypeApi', function() {
    describe('addWarehouseDocumentTypeAudit', function() {
      it('should call addWarehouseDocumentTypeAudit successfully', function(done) {
        //uncomment below and update the code to test addWarehouseDocumentTypeAudit
        //instance.addWarehouseDocumentTypeAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseDocumentTypeFile', function() {
      it('should call addWarehouseDocumentTypeFile successfully', function(done) {
        //uncomment below and update the code to test addWarehouseDocumentTypeFile
        //instance.addWarehouseDocumentTypeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseDocumentTypeFileByURL', function() {
      it('should call addWarehouseDocumentTypeFileByURL successfully', function(done) {
        //uncomment below and update the code to test addWarehouseDocumentTypeFileByURL
        //instance.addWarehouseDocumentTypeFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWarehouseDocumentTypeTag', function() {
      it('should call addWarehouseDocumentTypeTag successfully', function(done) {
        //uncomment below and update the code to test addWarehouseDocumentTypeTag
        //instance.addWarehouseDocumentTypeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWarehouseDocumentTypeFile', function() {
      it('should call deleteWarehouseDocumentTypeFile successfully', function(done) {
        //uncomment below and update the code to test deleteWarehouseDocumentTypeFile
        //instance.deleteWarehouseDocumentTypeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWarehouseDocumentTypeTag', function() {
      it('should call deleteWarehouseDocumentTypeTag successfully', function(done) {
        //uncomment below and update the code to test deleteWarehouseDocumentTypeTag
        //instance.deleteWarehouseDocumentTypeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateWarehouseDocumentTypeById', function() {
      it('should call getDuplicateWarehouseDocumentTypeById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateWarehouseDocumentTypeById
        //instance.getDuplicateWarehouseDocumentTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseDocumentTypeByFilter', function() {
      it('should call getWarehouseDocumentTypeByFilter successfully', function(done) {
        //uncomment below and update the code to test getWarehouseDocumentTypeByFilter
        //instance.getWarehouseDocumentTypeByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseDocumentTypeById', function() {
      it('should call getWarehouseDocumentTypeById successfully', function(done) {
        //uncomment below and update the code to test getWarehouseDocumentTypeById
        //instance.getWarehouseDocumentTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseDocumentTypeFiles', function() {
      it('should call getWarehouseDocumentTypeFiles successfully', function(done) {
        //uncomment below and update the code to test getWarehouseDocumentTypeFiles
        //instance.getWarehouseDocumentTypeFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWarehouseDocumentTypeTags', function() {
      it('should call getWarehouseDocumentTypeTags successfully', function(done) {
        //uncomment below and update the code to test getWarehouseDocumentTypeTags
        //instance.getWarehouseDocumentTypeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
