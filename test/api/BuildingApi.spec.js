/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.BuildingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuildingApi', function() {
    describe('addBuilding', function() {
      it('should call addBuilding successfully', function(done) {
        //uncomment below and update the code to test addBuilding
        //instance.addBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBuildingAudit', function() {
      it('should call addBuildingAudit successfully', function(done) {
        //uncomment below and update the code to test addBuildingAudit
        //instance.addBuildingAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBuildingFile', function() {
      it('should call addBuildingFile successfully', function(done) {
        //uncomment below and update the code to test addBuildingFile
        //instance.addBuildingFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBuildingFileByURL', function() {
      it('should call addBuildingFileByURL successfully', function(done) {
        //uncomment below and update the code to test addBuildingFileByURL
        //instance.addBuildingFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBuildingTag', function() {
      it('should call addBuildingTag successfully', function(done) {
        //uncomment below and update the code to test addBuildingTag
        //instance.addBuildingTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBuilding', function() {
      it('should call deleteBuilding successfully', function(done) {
        //uncomment below and update the code to test deleteBuilding
        //instance.deleteBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBuildingFile', function() {
      it('should call deleteBuildingFile successfully', function(done) {
        //uncomment below and update the code to test deleteBuildingFile
        //instance.deleteBuildingFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBuildingTag', function() {
      it('should call deleteBuildingTag successfully', function(done) {
        //uncomment below and update the code to test deleteBuildingTag
        //instance.deleteBuildingTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildingByFilter', function() {
      it('should call getBuildingByFilter successfully', function(done) {
        //uncomment below and update the code to test getBuildingByFilter
        //instance.getBuildingByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildingById', function() {
      it('should call getBuildingById successfully', function(done) {
        //uncomment below and update the code to test getBuildingById
        //instance.getBuildingById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildingFiles', function() {
      it('should call getBuildingFiles successfully', function(done) {
        //uncomment below and update the code to test getBuildingFiles
        //instance.getBuildingFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildingTags', function() {
      it('should call getBuildingTags successfully', function(done) {
        //uncomment below and update the code to test getBuildingTags
        //instance.getBuildingTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateBuildingById', function() {
      it('should call getDuplicateBuildingById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateBuildingById
        //instance.getDuplicateBuildingById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBuilding', function() {
      it('should call updateBuilding successfully', function(done) {
        //uncomment below and update the code to test updateBuilding
        //instance.updateBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBuildingCustomFields', function() {
      it('should call updateBuildingCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateBuildingCustomFields
        //instance.updateBuildingCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
