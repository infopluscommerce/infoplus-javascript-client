/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.CommodityCodeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommodityCodeApi', function() {
    describe('addCommodityCodeAudit', function() {
      it('should call addCommodityCodeAudit successfully', function(done) {
        //uncomment below and update the code to test addCommodityCodeAudit
        //instance.addCommodityCodeAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCommodityCodeFile', function() {
      it('should call addCommodityCodeFile successfully', function(done) {
        //uncomment below and update the code to test addCommodityCodeFile
        //instance.addCommodityCodeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCommodityCodeFileByURL', function() {
      it('should call addCommodityCodeFileByURL successfully', function(done) {
        //uncomment below and update the code to test addCommodityCodeFileByURL
        //instance.addCommodityCodeFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCommodityCodeTag', function() {
      it('should call addCommodityCodeTag successfully', function(done) {
        //uncomment below and update the code to test addCommodityCodeTag
        //instance.addCommodityCodeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCommodityCodeFile', function() {
      it('should call deleteCommodityCodeFile successfully', function(done) {
        //uncomment below and update the code to test deleteCommodityCodeFile
        //instance.deleteCommodityCodeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCommodityCodeTag', function() {
      it('should call deleteCommodityCodeTag successfully', function(done) {
        //uncomment below and update the code to test deleteCommodityCodeTag
        //instance.deleteCommodityCodeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommodityCodeByFilter', function() {
      it('should call getCommodityCodeByFilter successfully', function(done) {
        //uncomment below and update the code to test getCommodityCodeByFilter
        //instance.getCommodityCodeByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommodityCodeById', function() {
      it('should call getCommodityCodeById successfully', function(done) {
        //uncomment below and update the code to test getCommodityCodeById
        //instance.getCommodityCodeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommodityCodeFiles', function() {
      it('should call getCommodityCodeFiles successfully', function(done) {
        //uncomment below and update the code to test getCommodityCodeFiles
        //instance.getCommodityCodeFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommodityCodeTags', function() {
      it('should call getCommodityCodeTags successfully', function(done) {
        //uncomment below and update the code to test getCommodityCodeTags
        //instance.getCommodityCodeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateCommodityCodeById', function() {
      it('should call getDuplicateCommodityCodeById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateCommodityCodeById
        //instance.getDuplicateCommodityCodeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
