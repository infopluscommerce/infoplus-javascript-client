/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.ProductionLotApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductionLotApi', function() {
    describe('addProductionLot', function() {
      it('should call addProductionLot successfully', function(done) {
        //uncomment below and update the code to test addProductionLot
        //instance.addProductionLot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addProductionLotAudit', function() {
      it('should call addProductionLotAudit successfully', function(done) {
        //uncomment below and update the code to test addProductionLotAudit
        //instance.addProductionLotAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addProductionLotFile', function() {
      it('should call addProductionLotFile successfully', function(done) {
        //uncomment below and update the code to test addProductionLotFile
        //instance.addProductionLotFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addProductionLotFileByURL', function() {
      it('should call addProductionLotFileByURL successfully', function(done) {
        //uncomment below and update the code to test addProductionLotFileByURL
        //instance.addProductionLotFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addProductionLotTag', function() {
      it('should call addProductionLotTag successfully', function(done) {
        //uncomment below and update the code to test addProductionLotTag
        //instance.addProductionLotTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductionLot', function() {
      it('should call deleteProductionLot successfully', function(done) {
        //uncomment below and update the code to test deleteProductionLot
        //instance.deleteProductionLot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductionLotFile', function() {
      it('should call deleteProductionLotFile successfully', function(done) {
        //uncomment below and update the code to test deleteProductionLotFile
        //instance.deleteProductionLotFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProductionLotTag', function() {
      it('should call deleteProductionLotTag successfully', function(done) {
        //uncomment below and update the code to test deleteProductionLotTag
        //instance.deleteProductionLotTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateProductionLotById', function() {
      it('should call getDuplicateProductionLotById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateProductionLotById
        //instance.getDuplicateProductionLotById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductionLotByFilter', function() {
      it('should call getProductionLotByFilter successfully', function(done) {
        //uncomment below and update the code to test getProductionLotByFilter
        //instance.getProductionLotByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductionLotById', function() {
      it('should call getProductionLotById successfully', function(done) {
        //uncomment below and update the code to test getProductionLotById
        //instance.getProductionLotById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductionLotFiles', function() {
      it('should call getProductionLotFiles successfully', function(done) {
        //uncomment below and update the code to test getProductionLotFiles
        //instance.getProductionLotFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProductionLotTags', function() {
      it('should call getProductionLotTags successfully', function(done) {
        //uncomment below and update the code to test getProductionLotTags
        //instance.getProductionLotTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProductionLot', function() {
      it('should call updateProductionLot successfully', function(done) {
        //uncomment below and update the code to test updateProductionLot
        //instance.updateProductionLot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProductionLotCustomFields', function() {
      it('should call updateProductionLotCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateProductionLotCustomFields
        //instance.updateProductionLotCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
