/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.AsnApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AsnApi', function() {
    describe('addAsn', function() {
      it('should call addAsn successfully', function(done) {
        //uncomment below and update the code to test addAsn
        //instance.addAsn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAsnAudit', function() {
      it('should call addAsnAudit successfully', function(done) {
        //uncomment below and update the code to test addAsnAudit
        //instance.addAsnAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAsnFile', function() {
      it('should call addAsnFile successfully', function(done) {
        //uncomment below and update the code to test addAsnFile
        //instance.addAsnFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAsnFileByURL', function() {
      it('should call addAsnFileByURL successfully', function(done) {
        //uncomment below and update the code to test addAsnFileByURL
        //instance.addAsnFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAsnTag', function() {
      it('should call addAsnTag successfully', function(done) {
        //uncomment below and update the code to test addAsnTag
        //instance.addAsnTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAsn', function() {
      it('should call deleteAsn successfully', function(done) {
        //uncomment below and update the code to test deleteAsn
        //instance.deleteAsn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAsnFile', function() {
      it('should call deleteAsnFile successfully', function(done) {
        //uncomment below and update the code to test deleteAsnFile
        //instance.deleteAsnFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAsnTag', function() {
      it('should call deleteAsnTag successfully', function(done) {
        //uncomment below and update the code to test deleteAsnTag
        //instance.deleteAsnTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAsnByFilter', function() {
      it('should call getAsnByFilter successfully', function(done) {
        //uncomment below and update the code to test getAsnByFilter
        //instance.getAsnByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAsnById', function() {
      it('should call getAsnById successfully', function(done) {
        //uncomment below and update the code to test getAsnById
        //instance.getAsnById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAsnFiles', function() {
      it('should call getAsnFiles successfully', function(done) {
        //uncomment below and update the code to test getAsnFiles
        //instance.getAsnFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAsnTags', function() {
      it('should call getAsnTags successfully', function(done) {
        //uncomment below and update the code to test getAsnTags
        //instance.getAsnTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateAsnById', function() {
      it('should call getDuplicateAsnById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateAsnById
        //instance.getDuplicateAsnById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAsn', function() {
      it('should call updateAsn successfully', function(done) {
        //uncomment below and update the code to test updateAsn
        //instance.updateAsn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAsnCustomFields', function() {
      it('should call updateAsnCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateAsnCustomFields
        //instance.updateAsnCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
