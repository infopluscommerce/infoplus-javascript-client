/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.infoplus);
  }
}(this, function(expect, infoplus) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new infoplus.CartonTypeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartonTypeApi', function() {
    describe('addCartonType', function() {
      it('should call addCartonType successfully', function(done) {
        //uncomment below and update the code to test addCartonType
        //instance.addCartonType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonTypeAudit', function() {
      it('should call addCartonTypeAudit successfully', function(done) {
        //uncomment below and update the code to test addCartonTypeAudit
        //instance.addCartonTypeAudit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonTypeFile', function() {
      it('should call addCartonTypeFile successfully', function(done) {
        //uncomment below and update the code to test addCartonTypeFile
        //instance.addCartonTypeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonTypeFileByURL', function() {
      it('should call addCartonTypeFileByURL successfully', function(done) {
        //uncomment below and update the code to test addCartonTypeFileByURL
        //instance.addCartonTypeFileByURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCartonTypeTag', function() {
      it('should call addCartonTypeTag successfully', function(done) {
        //uncomment below and update the code to test addCartonTypeTag
        //instance.addCartonTypeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonType', function() {
      it('should call deleteCartonType successfully', function(done) {
        //uncomment below and update the code to test deleteCartonType
        //instance.deleteCartonType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonTypeFile', function() {
      it('should call deleteCartonTypeFile successfully', function(done) {
        //uncomment below and update the code to test deleteCartonTypeFile
        //instance.deleteCartonTypeFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCartonTypeTag', function() {
      it('should call deleteCartonTypeTag successfully', function(done) {
        //uncomment below and update the code to test deleteCartonTypeTag
        //instance.deleteCartonTypeTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonTypeByFilter', function() {
      it('should call getCartonTypeByFilter successfully', function(done) {
        //uncomment below and update the code to test getCartonTypeByFilter
        //instance.getCartonTypeByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonTypeById', function() {
      it('should call getCartonTypeById successfully', function(done) {
        //uncomment below and update the code to test getCartonTypeById
        //instance.getCartonTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonTypeFiles', function() {
      it('should call getCartonTypeFiles successfully', function(done) {
        //uncomment below and update the code to test getCartonTypeFiles
        //instance.getCartonTypeFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCartonTypeTags', function() {
      it('should call getCartonTypeTags successfully', function(done) {
        //uncomment below and update the code to test getCartonTypeTags
        //instance.getCartonTypeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDuplicateCartonTypeById', function() {
      it('should call getDuplicateCartonTypeById successfully', function(done) {
        //uncomment below and update the code to test getDuplicateCartonTypeById
        //instance.getDuplicateCartonTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCartonType', function() {
      it('should call updateCartonType successfully', function(done) {
        //uncomment below and update the code to test updateCartonType
        //instance.updateCartonType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCartonTypeCustomFields', function() {
      it('should call updateCartonTypeCustomFields successfully', function(done) {
        //uncomment below and update the code to test updateCartonTypeCustomFields
        //instance.updateCartonTypeCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
