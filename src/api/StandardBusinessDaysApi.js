/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiResponse', 'model/RecordFile', 'model/StandardBusinessDays'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApiResponse'), require('../model/RecordFile'), require('../model/StandardBusinessDays'));
  } else {
    // Browser globals (root is window)
    if (!root.infoplus) {
      root.infoplus = {};
    }
    root.infoplus.StandardBusinessDaysApi = factory(root.infoplus.ApiClient, root.infoplus.ApiResponse, root.infoplus.RecordFile, root.infoplus.StandardBusinessDays);
  }
}(this, function(ApiClient, ApiResponse, RecordFile, StandardBusinessDays) {
  'use strict';

  /**
   * StandardBusinessDays service.
   * @module api/StandardBusinessDaysApi
   * @version beta
   */

  /**
   * Constructs a new StandardBusinessDaysApi. 
   * @alias module:api/StandardBusinessDaysApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addStandardBusinessDays operation.
     * @callback module:api/StandardBusinessDaysApi~addStandardBusinessDaysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StandardBusinessDays} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a standardBusinessDays
     * Inserts a new standardBusinessDays using the specified data.
     * @param {module:model/StandardBusinessDays} body StandardBusinessDays to be inserted.
     * @param {module:api/StandardBusinessDaysApi~addStandardBusinessDaysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StandardBusinessDays}
     */
    this.addStandardBusinessDays = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addStandardBusinessDays");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = StandardBusinessDays;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addStandardBusinessDaysAudit operation.
     * @callback module:api/StandardBusinessDaysApi~addStandardBusinessDaysAuditCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new audit for a standardBusinessDays
     * Adds an audit to an existing standardBusinessDays.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to add an audit to
     * @param {String} standardBusinessDaysAudit The audit to add
     * @param {module:api/StandardBusinessDaysApi~addStandardBusinessDaysAuditCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addStandardBusinessDaysAudit = function(standardBusinessDaysId, standardBusinessDaysAudit, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling addStandardBusinessDaysAudit");
      }

      // verify the required parameter 'standardBusinessDaysAudit' is set
      if (standardBusinessDaysAudit === undefined || standardBusinessDaysAudit === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysAudit' when calling addStandardBusinessDaysAudit");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId,
        'standardBusinessDaysAudit': standardBusinessDaysAudit
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/audit/{standardBusinessDaysAudit}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addStandardBusinessDaysFile operation.
     * @callback module:api/StandardBusinessDaysApi~addStandardBusinessDaysFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to a standardBusinessDays
     * Adds a file to an existing standardBusinessDays.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to add a file to
     * @param {String} fileName Name of file
     * @param {module:api/StandardBusinessDaysApi~addStandardBusinessDaysFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addStandardBusinessDaysFile = function(standardBusinessDaysId, fileName, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling addStandardBusinessDaysFile");
      }

      // verify the required parameter 'fileName' is set
      if (fileName === undefined || fileName === null) {
        throw new Error("Missing the required parameter 'fileName' when calling addStandardBusinessDaysFile");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId,
        'fileName': fileName
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/file/{fileName}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addStandardBusinessDaysFileByURL operation.
     * @callback module:api/StandardBusinessDaysApi~addStandardBusinessDaysFileByURLCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to a standardBusinessDays by URL.
     * Adds a file to an existing standardBusinessDays by URL.
     * @param {module:model/RecordFile} body The url and optionly fileName to be used.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to add an file to
     * @param {module:api/StandardBusinessDaysApi~addStandardBusinessDaysFileByURLCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addStandardBusinessDaysFileByURL = function(body, standardBusinessDaysId, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addStandardBusinessDaysFileByURL");
      }

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling addStandardBusinessDaysFileByURL");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/file', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addStandardBusinessDaysTag operation.
     * @callback module:api/StandardBusinessDaysApi~addStandardBusinessDaysTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new tags for a standardBusinessDays.
     * Adds a tag to an existing standardBusinessDays.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to add a tag to
     * @param {String} standardBusinessDaysTag The tag to add
     * @param {module:api/StandardBusinessDaysApi~addStandardBusinessDaysTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addStandardBusinessDaysTag = function(standardBusinessDaysId, standardBusinessDaysTag, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling addStandardBusinessDaysTag");
      }

      // verify the required parameter 'standardBusinessDaysTag' is set
      if (standardBusinessDaysTag === undefined || standardBusinessDaysTag === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysTag' when calling addStandardBusinessDaysTag");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId,
        'standardBusinessDaysTag': standardBusinessDaysTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/tag/{standardBusinessDaysTag}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteStandardBusinessDays operation.
     * @callback module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a standardBusinessDays
     * Deletes the standardBusinessDays identified by the specified id.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to be deleted.
     * @param {module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteStandardBusinessDays = function(standardBusinessDaysId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling deleteStandardBusinessDays");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteStandardBusinessDaysFile operation.
     * @callback module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a file for a standardBusinessDays.
     * Deletes an existing standardBusinessDays file using the specified data.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to remove file from
     * @param {Number} fileId Id of the file to delete
     * @param {module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteStandardBusinessDaysFile = function(standardBusinessDaysId, fileId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling deleteStandardBusinessDaysFile");
      }

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling deleteStandardBusinessDaysFile");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId,
        'fileId': fileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/file/{fileId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteStandardBusinessDaysTag operation.
     * @callback module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a tag for a standardBusinessDays.
     * Deletes an existing standardBusinessDays tag using the specified data.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to remove tag from
     * @param {String} standardBusinessDaysTag The tag to delete
     * @param {module:api/StandardBusinessDaysApi~deleteStandardBusinessDaysTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteStandardBusinessDaysTag = function(standardBusinessDaysId, standardBusinessDaysTag, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling deleteStandardBusinessDaysTag");
      }

      // verify the required parameter 'standardBusinessDaysTag' is set
      if (standardBusinessDaysTag === undefined || standardBusinessDaysTag === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysTag' when calling deleteStandardBusinessDaysTag");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId,
        'standardBusinessDaysTag': standardBusinessDaysTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/tag/{standardBusinessDaysTag}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getDuplicateStandardBusinessDaysById operation.
     * @callback module:api/StandardBusinessDaysApi~getDuplicateStandardBusinessDaysByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StandardBusinessDays} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a duplicated a standardBusinessDays by id
     * Returns a duplicated standardBusinessDays identified by the specified id.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to be duplicated.
     * @param {module:api/StandardBusinessDaysApi~getDuplicateStandardBusinessDaysByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StandardBusinessDays}
     */
    this.getDuplicateStandardBusinessDaysById = function(standardBusinessDaysId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling getDuplicateStandardBusinessDaysById");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = StandardBusinessDays;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/duplicate/{standardBusinessDaysId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStandardBusinessDaysByFilter operation.
     * @callback module:api/StandardBusinessDaysApi~getStandardBusinessDaysByFilterCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/StandardBusinessDays>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search standardBusinessDayses by filter
     * Returns the list of standardBusinessDayses that match the given filter.
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter Query string, used to filter results.
     * @param {Number} opts.page Result page number.  Defaults to 1.
     * @param {Number} opts.limit Maximum results per page.  Defaults to 20.  Max allowed value is 250.
     * @param {String} opts.sort Sort results by specified field.
     * @param {module:api/StandardBusinessDaysApi~getStandardBusinessDaysByFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/StandardBusinessDays>}
     */
    this.getStandardBusinessDaysByFilter = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'filter': opts['filter'],
        'page': opts['page'],
        'limit': opts['limit'],
        'sort': opts['sort'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [StandardBusinessDays];

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/search', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStandardBusinessDaysById operation.
     * @callback module:api/StandardBusinessDaysApi~getStandardBusinessDaysByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StandardBusinessDays} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a standardBusinessDays by id
     * Returns the standardBusinessDays identified by the specified id.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to be returned.
     * @param {module:api/StandardBusinessDaysApi~getStandardBusinessDaysByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StandardBusinessDays}
     */
    this.getStandardBusinessDaysById = function(standardBusinessDaysId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling getStandardBusinessDaysById");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = StandardBusinessDays;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStandardBusinessDaysFiles operation.
     * @callback module:api/StandardBusinessDaysApi~getStandardBusinessDaysFilesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the files for a standardBusinessDays.
     * Get all existing standardBusinessDays files.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to get files for
     * @param {module:api/StandardBusinessDaysApi~getStandardBusinessDaysFilesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getStandardBusinessDaysFiles = function(standardBusinessDaysId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling getStandardBusinessDaysFiles");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/file', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStandardBusinessDaysTags operation.
     * @callback module:api/StandardBusinessDaysApi~getStandardBusinessDaysTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the tags for a standardBusinessDays.
     * Get all existing standardBusinessDays tags.
     * @param {Number} standardBusinessDaysId Id of the standardBusinessDays to get tags for
     * @param {module:api/StandardBusinessDaysApi~getStandardBusinessDaysTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getStandardBusinessDaysTags = function(standardBusinessDaysId, callback) {
      var postBody = null;

      // verify the required parameter 'standardBusinessDaysId' is set
      if (standardBusinessDaysId === undefined || standardBusinessDaysId === null) {
        throw new Error("Missing the required parameter 'standardBusinessDaysId' when calling getStandardBusinessDaysTags");
      }


      var pathParams = {
        'standardBusinessDaysId': standardBusinessDaysId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays/{standardBusinessDaysId}/tag', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateStandardBusinessDays operation.
     * @callback module:api/StandardBusinessDaysApi~updateStandardBusinessDaysCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a standardBusinessDays
     * Updates an existing standardBusinessDays using the specified data.
     * @param {module:model/StandardBusinessDays} body StandardBusinessDays to be updated.
     * @param {module:api/StandardBusinessDaysApi~updateStandardBusinessDaysCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateStandardBusinessDays = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateStandardBusinessDays");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/standardBusinessDays', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
