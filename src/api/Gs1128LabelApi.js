/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: v3.0
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GS1128Label', 'model/RecordFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GS1128Label'), require('../model/RecordFile'));
  } else {
    // Browser globals (root is window)
    if (!root.infoplus) {
      root.infoplus = {};
    }
    root.infoplus.Gs1128LabelApi = factory(root.infoplus.ApiClient, root.infoplus.GS1128Label, root.infoplus.RecordFile);
  }
}(this, function(ApiClient, GS1128Label, RecordFile) {
  'use strict';

  /**
   * Gs1128Label service.
   * @module api/Gs1128LabelApi
   * @version v3.0
   */

  /**
   * Constructs a new Gs1128LabelApi. 
   * @alias module:api/Gs1128LabelApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addGs1128LabelAudit operation.
     * @callback module:api/Gs1128LabelApi~addGs1128LabelAuditCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new audit for a gs1128Label
     * Adds an audit to an existing gs1128Label.
     * @param {Number} gs1128LabelId Id of the gs1128Label to add an audit to
     * @param {String} gs1128LabelAudit The audit to add
     * @param {module:api/Gs1128LabelApi~addGs1128LabelAuditCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addGs1128LabelAudit = function(gs1128LabelId, gs1128LabelAudit, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling addGs1128LabelAudit");
      }

      // verify the required parameter 'gs1128LabelAudit' is set
      if (gs1128LabelAudit === undefined || gs1128LabelAudit === null) {
        throw new Error("Missing the required parameter 'gs1128LabelAudit' when calling addGs1128LabelAudit");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId,
        'gs1128LabelAudit': gs1128LabelAudit
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/audit/{gs1128LabelAudit}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addGs1128LabelFile operation.
     * @callback module:api/Gs1128LabelApi~addGs1128LabelFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to a gs1128Label
     * Adds a file to an existing gs1128Label.
     * @param {Number} gs1128LabelId Id of the gs1128Label to add a file to
     * @param {String} fileName Name of file
     * @param {module:api/Gs1128LabelApi~addGs1128LabelFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addGs1128LabelFile = function(gs1128LabelId, fileName, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling addGs1128LabelFile");
      }

      // verify the required parameter 'fileName' is set
      if (fileName === undefined || fileName === null) {
        throw new Error("Missing the required parameter 'fileName' when calling addGs1128LabelFile");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId,
        'fileName': fileName
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/file/{fileName}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addGs1128LabelFileByURL operation.
     * @callback module:api/Gs1128LabelApi~addGs1128LabelFileByURLCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to a gs1128Label by URL.
     * Adds a file to an existing gs1128Label by URL.
     * @param {module:model/RecordFile} body The url and optionly fileName to be used.
     * @param {Number} gs1128LabelId Id of the gs1128Label to add an file to
     * @param {module:api/Gs1128LabelApi~addGs1128LabelFileByURLCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addGs1128LabelFileByURL = function(body, gs1128LabelId, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addGs1128LabelFileByURL");
      }

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling addGs1128LabelFileByURL");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/file', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addGs1128LabelTag operation.
     * @callback module:api/Gs1128LabelApi~addGs1128LabelTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new tags for a gs1128Label.
     * Adds a tag to an existing gs1128Label.
     * @param {Number} gs1128LabelId Id of the gs1128Label to add a tag to
     * @param {String} gs1128LabelTag The tag to add
     * @param {module:api/Gs1128LabelApi~addGs1128LabelTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addGs1128LabelTag = function(gs1128LabelId, gs1128LabelTag, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling addGs1128LabelTag");
      }

      // verify the required parameter 'gs1128LabelTag' is set
      if (gs1128LabelTag === undefined || gs1128LabelTag === null) {
        throw new Error("Missing the required parameter 'gs1128LabelTag' when calling addGs1128LabelTag");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId,
        'gs1128LabelTag': gs1128LabelTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/tag/{gs1128LabelTag}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteGs1128Label operation.
     * @callback module:api/Gs1128LabelApi~deleteGs1128LabelCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a gs1128Label
     * Deletes the gs1128Label identified by the specified id.
     * @param {Number} gs1128LabelId Id of the gs1128Label to be deleted.
     * @param {module:api/Gs1128LabelApi~deleteGs1128LabelCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteGs1128Label = function(gs1128LabelId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling deleteGs1128Label");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteGs1128LabelFile operation.
     * @callback module:api/Gs1128LabelApi~deleteGs1128LabelFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a file for a gs1128Label.
     * Deletes an existing gs1128Label file using the specified data.
     * @param {Number} gs1128LabelId Id of the gs1128Label to remove file from
     * @param {Number} fileId Id of the file to delete
     * @param {module:api/Gs1128LabelApi~deleteGs1128LabelFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteGs1128LabelFile = function(gs1128LabelId, fileId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling deleteGs1128LabelFile");
      }

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling deleteGs1128LabelFile");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId,
        'fileId': fileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/file/{fileId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteGs1128LabelTag operation.
     * @callback module:api/Gs1128LabelApi~deleteGs1128LabelTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a tag for a gs1128Label.
     * Deletes an existing gs1128Label tag using the specified data.
     * @param {Number} gs1128LabelId Id of the gs1128Label to remove tag from
     * @param {String} gs1128LabelTag The tag to delete
     * @param {module:api/Gs1128LabelApi~deleteGs1128LabelTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteGs1128LabelTag = function(gs1128LabelId, gs1128LabelTag, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling deleteGs1128LabelTag");
      }

      // verify the required parameter 'gs1128LabelTag' is set
      if (gs1128LabelTag === undefined || gs1128LabelTag === null) {
        throw new Error("Missing the required parameter 'gs1128LabelTag' when calling deleteGs1128LabelTag");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId,
        'gs1128LabelTag': gs1128LabelTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/tag/{gs1128LabelTag}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getDuplicateGs1128LabelById operation.
     * @callback module:api/Gs1128LabelApi~getDuplicateGs1128LabelByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GS1128Label} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a duplicated a gs1128Label by id
     * Returns a duplicated gs1128Label identified by the specified id.
     * @param {Number} gs1128LabelId Id of the gs1128Label to be duplicated.
     * @param {module:api/Gs1128LabelApi~getDuplicateGs1128LabelByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GS1128Label}
     */
    this.getDuplicateGs1128LabelById = function(gs1128LabelId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling getDuplicateGs1128LabelById");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GS1128Label;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/duplicate/{gs1128LabelId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getGs1128LabelByFilter operation.
     * @callback module:api/Gs1128LabelApi~getGs1128LabelByFilterCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GS1128Label>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search gs1128Labels by filter
     * Returns the list of gs1128Labels that match the given filter.
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter Query string, used to filter results.
     * @param {Number} opts.page Result page number.  Defaults to 1.
     * @param {Number} opts.limit Maximum results per page.  Defaults to 20.  Max allowed value is 250.
     * @param {String} opts.sort Sort results by specified field.
     * @param {module:api/Gs1128LabelApi~getGs1128LabelByFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GS1128Label>}
     */
    this.getGs1128LabelByFilter = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'filter': opts['filter'],
        'page': opts['page'],
        'limit': opts['limit'],
        'sort': opts['sort'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [GS1128Label];

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/search', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getGs1128LabelById operation.
     * @callback module:api/Gs1128LabelApi~getGs1128LabelByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GS1128Label} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a gs1128Label by id
     * Returns the gs1128Label identified by the specified id.
     * @param {Number} gs1128LabelId Id of the gs1128Label to be returned.
     * @param {module:api/Gs1128LabelApi~getGs1128LabelByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GS1128Label}
     */
    this.getGs1128LabelById = function(gs1128LabelId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling getGs1128LabelById");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GS1128Label;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getGs1128LabelFiles operation.
     * @callback module:api/Gs1128LabelApi~getGs1128LabelFilesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the files for a gs1128Label.
     * Get all existing gs1128Label files.
     * @param {Number} gs1128LabelId Id of the gs1128Label to get files for
     * @param {module:api/Gs1128LabelApi~getGs1128LabelFilesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getGs1128LabelFiles = function(gs1128LabelId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling getGs1128LabelFiles");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/file', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getGs1128LabelTags operation.
     * @callback module:api/Gs1128LabelApi~getGs1128LabelTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the tags for a gs1128Label.
     * Get all existing gs1128Label tags.
     * @param {Number} gs1128LabelId Id of the gs1128Label to get tags for
     * @param {module:api/Gs1128LabelApi~getGs1128LabelTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getGs1128LabelTags = function(gs1128LabelId, callback) {
      var postBody = null;

      // verify the required parameter 'gs1128LabelId' is set
      if (gs1128LabelId === undefined || gs1128LabelId === null) {
        throw new Error("Missing the required parameter 'gs1128LabelId' when calling getGs1128LabelTags");
      }


      var pathParams = {
        'gs1128LabelId': gs1128LabelId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/{gs1128LabelId}/tag', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGs1128LabelCustomFields operation.
     * @callback module:api/Gs1128LabelApi~updateGs1128LabelCustomFieldsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a gs1128Label custom fields
     * Updates an existing gs1128Label custom fields using the specified data.
     * @param {module:model/GS1128Label} body Gs1128Label to be updated.
     * @param {module:api/Gs1128LabelApi~updateGs1128LabelCustomFieldsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateGs1128LabelCustomFields = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateGs1128LabelCustomFields");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/v3.0/gs1128Label/customFields', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
