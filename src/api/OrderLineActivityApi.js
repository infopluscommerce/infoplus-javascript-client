/**
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiResponse', 'model/OrderLineActivity', 'model/RecordFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApiResponse'), require('../model/OrderLineActivity'), require('../model/RecordFile'));
  } else {
    // Browser globals (root is window)
    if (!root.infoplus) {
      root.infoplus = {};
    }
    root.infoplus.OrderLineActivityApi = factory(root.infoplus.ApiClient, root.infoplus.ApiResponse, root.infoplus.OrderLineActivity, root.infoplus.RecordFile);
  }
}(this, function(ApiClient, ApiResponse, OrderLineActivity, RecordFile) {
  'use strict';

  /**
   * OrderLineActivity service.
   * @module api/OrderLineActivityApi
   * @version beta
   */

  /**
   * Constructs a new OrderLineActivityApi. 
   * @alias module:api/OrderLineActivityApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addOrderLineActivity operation.
     * @callback module:api/OrderLineActivityApi~addOrderLineActivityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderLineActivity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an orderLineActivity
     * Inserts a new orderLineActivity using the specified data.
     * @param {module:model/OrderLineActivity} body OrderLineActivity to be inserted.
     * @param {module:api/OrderLineActivityApi~addOrderLineActivityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderLineActivity}
     */
    this.addOrderLineActivity = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addOrderLineActivity");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = OrderLineActivity;

      return this.apiClient.callApi(
        '/beta/orderLineActivity', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addOrderLineActivityAudit operation.
     * @callback module:api/OrderLineActivityApi~addOrderLineActivityAuditCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new audit for an orderLineActivity
     * Adds an audit to an existing orderLineActivity.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to add an audit to
     * @param {String} orderLineActivityAudit The audit to add
     * @param {module:api/OrderLineActivityApi~addOrderLineActivityAuditCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addOrderLineActivityAudit = function(orderLineActivityId, orderLineActivityAudit, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling addOrderLineActivityAudit");
      }

      // verify the required parameter 'orderLineActivityAudit' is set
      if (orderLineActivityAudit === undefined || orderLineActivityAudit === null) {
        throw new Error("Missing the required parameter 'orderLineActivityAudit' when calling addOrderLineActivityAudit");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId,
        'orderLineActivityAudit': orderLineActivityAudit
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/audit/{orderLineActivityAudit}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addOrderLineActivityFile operation.
     * @callback module:api/OrderLineActivityApi~addOrderLineActivityFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to an orderLineActivity
     * Adds a file to an existing orderLineActivity.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to add a file to
     * @param {String} fileName Name of file
     * @param {module:api/OrderLineActivityApi~addOrderLineActivityFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addOrderLineActivityFile = function(orderLineActivityId, fileName, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling addOrderLineActivityFile");
      }

      // verify the required parameter 'fileName' is set
      if (fileName === undefined || fileName === null) {
        throw new Error("Missing the required parameter 'fileName' when calling addOrderLineActivityFile");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId,
        'fileName': fileName
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/file/{fileName}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addOrderLineActivityFileByURL operation.
     * @callback module:api/OrderLineActivityApi~addOrderLineActivityFileByURLCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach a file to an orderLineActivity by URL.
     * Adds a file to an existing orderLineActivity by URL.
     * @param {module:model/RecordFile} body The url and optionly fileName to be used.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to add an file to
     * @param {module:api/OrderLineActivityApi~addOrderLineActivityFileByURLCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addOrderLineActivityFileByURL = function(body, orderLineActivityId, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addOrderLineActivityFileByURL");
      }

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling addOrderLineActivityFileByURL");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/file', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the addOrderLineActivityTag operation.
     * @callback module:api/OrderLineActivityApi~addOrderLineActivityTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new tags for an orderLineActivity.
     * Adds a tag to an existing orderLineActivity.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to add a tag to
     * @param {String} orderLineActivityTag The tag to add
     * @param {module:api/OrderLineActivityApi~addOrderLineActivityTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addOrderLineActivityTag = function(orderLineActivityId, orderLineActivityTag, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling addOrderLineActivityTag");
      }

      // verify the required parameter 'orderLineActivityTag' is set
      if (orderLineActivityTag === undefined || orderLineActivityTag === null) {
        throw new Error("Missing the required parameter 'orderLineActivityTag' when calling addOrderLineActivityTag");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId,
        'orderLineActivityTag': orderLineActivityTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/tag/{orderLineActivityTag}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrderLineActivity operation.
     * @callback module:api/OrderLineActivityApi~deleteOrderLineActivityCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an orderLineActivity
     * Deletes the orderLineActivity identified by the specified id.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to be deleted.
     * @param {module:api/OrderLineActivityApi~deleteOrderLineActivityCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteOrderLineActivity = function(orderLineActivityId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling deleteOrderLineActivity");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrderLineActivityFile operation.
     * @callback module:api/OrderLineActivityApi~deleteOrderLineActivityFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a file for an orderLineActivity.
     * Deletes an existing orderLineActivity file using the specified data.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to remove file from
     * @param {Number} fileId Id of the file to delete
     * @param {module:api/OrderLineActivityApi~deleteOrderLineActivityFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteOrderLineActivityFile = function(orderLineActivityId, fileId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling deleteOrderLineActivityFile");
      }

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling deleteOrderLineActivityFile");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId,
        'fileId': fileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/file/{fileId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrderLineActivityTag operation.
     * @callback module:api/OrderLineActivityApi~deleteOrderLineActivityTagCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a tag for an orderLineActivity.
     * Deletes an existing orderLineActivity tag using the specified data.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to remove tag from
     * @param {String} orderLineActivityTag The tag to delete
     * @param {module:api/OrderLineActivityApi~deleteOrderLineActivityTagCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteOrderLineActivityTag = function(orderLineActivityId, orderLineActivityTag, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling deleteOrderLineActivityTag");
      }

      // verify the required parameter 'orderLineActivityTag' is set
      if (orderLineActivityTag === undefined || orderLineActivityTag === null) {
        throw new Error("Missing the required parameter 'orderLineActivityTag' when calling deleteOrderLineActivityTag");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId,
        'orderLineActivityTag': orderLineActivityTag
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/tag/{orderLineActivityTag}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getDuplicateOrderLineActivityById operation.
     * @callback module:api/OrderLineActivityApi~getDuplicateOrderLineActivityByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderLineActivity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a duplicated an orderLineActivity by id
     * Returns a duplicated orderLineActivity identified by the specified id.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to be duplicated.
     * @param {module:api/OrderLineActivityApi~getDuplicateOrderLineActivityByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderLineActivity}
     */
    this.getDuplicateOrderLineActivityById = function(orderLineActivityId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling getDuplicateOrderLineActivityById");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = OrderLineActivity;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/duplicate/{orderLineActivityId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderLineActivityByFilter operation.
     * @callback module:api/OrderLineActivityApi~getOrderLineActivityByFilterCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OrderLineActivity>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search orderLineActivitys by filter
     * Returns the list of orderLineActivitys that match the given filter.
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter Query string, used to filter results.
     * @param {Number} opts.page Result page number.  Defaults to 1.
     * @param {Number} opts.limit Maximum results per page.  Defaults to 20.  Max allowed value is 250.
     * @param {String} opts.sort Sort results by specified field.
     * @param {module:api/OrderLineActivityApi~getOrderLineActivityByFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OrderLineActivity>}
     */
    this.getOrderLineActivityByFilter = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'filter': opts['filter'],
        'page': opts['page'],
        'limit': opts['limit'],
        'sort': opts['sort'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [OrderLineActivity];

      return this.apiClient.callApi(
        '/beta/orderLineActivity/search', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderLineActivityById operation.
     * @callback module:api/OrderLineActivityApi~getOrderLineActivityByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderLineActivity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an orderLineActivity by id
     * Returns the orderLineActivity identified by the specified id.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to be returned.
     * @param {module:api/OrderLineActivityApi~getOrderLineActivityByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderLineActivity}
     */
    this.getOrderLineActivityById = function(orderLineActivityId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling getOrderLineActivityById");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = OrderLineActivity;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderLineActivityFiles operation.
     * @callback module:api/OrderLineActivityApi~getOrderLineActivityFilesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the files for an orderLineActivity.
     * Get all existing orderLineActivity files.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to get files for
     * @param {module:api/OrderLineActivityApi~getOrderLineActivityFilesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getOrderLineActivityFiles = function(orderLineActivityId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling getOrderLineActivityFiles");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/file', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderLineActivityTags operation.
     * @callback module:api/OrderLineActivityApi~getOrderLineActivityTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the tags for an orderLineActivity.
     * Get all existing orderLineActivity tags.
     * @param {Number} orderLineActivityId Id of the orderLineActivity to get tags for
     * @param {module:api/OrderLineActivityApi~getOrderLineActivityTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getOrderLineActivityTags = function(orderLineActivityId, callback) {
      var postBody = null;

      // verify the required parameter 'orderLineActivityId' is set
      if (orderLineActivityId === undefined || orderLineActivityId === null) {
        throw new Error("Missing the required parameter 'orderLineActivityId' when calling getOrderLineActivityTags");
      }


      var pathParams = {
        'orderLineActivityId': orderLineActivityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity/{orderLineActivityId}/tag', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrderLineActivity operation.
     * @callback module:api/OrderLineActivityApi~updateOrderLineActivityCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an orderLineActivity
     * Updates an existing orderLineActivity using the specified data.
     * @param {module:model/OrderLineActivity} body OrderLineActivity to be updated.
     * @param {module:api/OrderLineActivityApi~updateOrderLineActivityCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateOrderLineActivity = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateOrderLineActivity");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/beta/orderLineActivity', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
